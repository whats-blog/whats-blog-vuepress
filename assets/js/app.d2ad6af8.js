"use strict";(self.webpackChunkwhats_blog_vuepress=self.webpackChunkwhats_blog_vuepress||[]).push([[143],{9516:(e,n,a)=>{function t(e){return e instanceof Date?e.getTime():Date.parse(e)}a.r(n),a.d(n,{parseDate:()=>t})},4674:(e,n,a)=>{a.d(n,{g:()=>i});var t=a(2928);const s=(0,t.vW)((e=>{}));var o=a(4849);const l=[{id:"post",prevText:"Prev",nextText:"Next",filter:(e,n)=>{const a=e.frontmatter.pagination;return!!a&&a.id===n&&"post"===a.type},sorter:(e,n)=>{const{parseDate:t}=a(9516);return t(e.frontmatter.date)-t(n.frontmatter.date)},pages:[{path:"/",interval:[0,5]},{path:"/page/2/",interval:[5,10]},{path:"/page/3/",interval:[10,11]}]}],p=(0,t.vW)((({app:e})=>{const n=(0,o.iH)(l);e.mixin({computed:{$pagination(){const{pagination:e}=this.$frontmatter;if(!e)return;const n=this.$getPagination(e.id),a=this.$pages.filter((a=>n.filter(a,e.id))).sort(((e,a)=>n.sorter(a,e)));if("page"===e.type)return{hasPrev:e.index>0,prevLink:(n.pages[e.index-1]||{}).path,hasNext:e.index+1<n.pages.length,nextLink:(n.pages[e.index+1]||{}).path,pages:n.pages.map((e=>({path:e.path}))),posts:a.slice(...n.pages[e.index].interval)};if("post"===e.type){const e=a.findIndex((e=>e.key===this.$page.key));return{hasPrev:e>0,prevLink:(a[e-1]||{}).path,prevText:(a[e-1]||{}).title,hasNext:e+1<a.length,nextLink:(a[e+1]||{}).path,nextText:(a[e+1]||{}).title}}}},methods:{$getPagination:e=>n.value.filter((n=>n.id===e))[0]}})})),r=[{key:"v-5f9b8c08",path:"/2018/11/07/frontmatter-in-vuepress-2.html",title:"frontmatter in vuepress 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 2",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}],content:'\nAny markdown file that contains a YAML front matter block will be processed by [gray-matter](https://github.com/jonschlinkert/gray-matter). The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:\n\n```markdown\n---\ntitle: Blogging Like a Hacker\nlang: en-US\n---\n```\n\nBetween these triple-dashed lines, you can set predefined variables (see [below](#predefined-variables) for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code>[$frontmatter](./global-computed.md#frontmatter)</code> at the rest of the page, plus all custom and theming components.\n\n::: tip\nFront matter variables are **optional** in VuePress.\n:::\n\n## Alternative Front Matter Formats\n\nIn addition, VuePress also supports JSON or [TOML](https://github.com/toml-lang/toml) front matter.\n\nJSON front matter needs to start and end in curly braces:\n\n```\n---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n```\n\nTOML front matter needs to be explicitly marked as TOML:\n\n```\n---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n```\n\n\n## Predefined Variables\n\n### title\n\n- Type: `string`\n- Default: `h1_title || siteConfig.title`\n\nTitle of current page.\n\n### lang\n\n- Type: `string`\n- Default: `en-US`\n\nLanguage of current page.\n\n### description\n\n- Type: `string`\n- Default: `siteConfig.description`\n\nDescription of current page.\n\n### layout\n\n- Type: `string`\n- Default: `Layout`\n\nSet the layout component of the current page.\n\n### permalink\n\n- Type: `string`\n- Default: `siteConfig.permalink`\n\nRefer to: [Permalinks](./permalinks.md).\n\n### metaTitle\n\n- Type: `string`\n- Default: <code>\\`${page.title} | ${siteConfig.title}\\`</code>\n\nOverride the default meta title.\n\n### meta\n\n- Type: `array`\n- Default: `undefined`\n\nSpecify extra meta tags to be injected:\n\n``` yaml\n---\nmeta:\n  - name: description\n    content: hello\n  - name: keywords\n    content: super duper SEO\n---\n```\n\n## Predefined Variables Powered By Default Theme\n\n### navbar\n\n- Type: `boolean`\n- Default: `undefined`\n\nSee: [Default Theme Config > Disable the Navbar](../theme/default-theme-config.md#disable-the-navbar).\n\n### sidebar\n\n- Type: `boolean|\'auto\'`\n- Default: `undefined`\n\nSee: [Default Theme Config > Sidebar](../theme/default-theme-config.md#sidebar).\n',contentRendered:'<p>Any markdown file that contains a YAML front matter block will be processed by <a href="https://github.com/jonschlinkert/gray-matter" target="_blank" rel="noopener noreferrer">gray-matter<OutboundLink/></a>. The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Blogging Like a Hacker\n<span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Between these triple-dashed lines, you can set predefined variables (see <a href="#predefined-variables">below</a> for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code><RouterLink to="/_posts/global-computed.html#frontmatter">$frontmatter</RouterLink></code> at the rest of the page, plus all custom and theming components.</p>\n<div class="custom-container tip">\n<p>Front matter variables are <strong>optional</strong> in VuePress.</p>\n</div>\n<h2 id="alternative-front-matter-formats" tabindex="-1"><a class="header-anchor" href="#alternative-front-matter-formats" aria-hidden="true">#</a> Alternative Front Matter Formats</h2>\n<p>In addition, VuePress also supports JSON or <a href="https://github.com/toml-lang/toml" target="_blank" rel="noopener noreferrer">TOML<OutboundLink/></a> front matter.</p>\n<p>JSON front matter needs to start and end in curly braces:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>TOML front matter needs to be explicitly marked as TOML:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="predefined-variables" tabindex="-1"><a class="header-anchor" href="#predefined-variables" aria-hidden="true">#</a> Predefined Variables</h2>\n<h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>h1_title || siteConfig.title</code></li>\n</ul>\n<p>Title of current page.</p>\n<h3 id="lang" tabindex="-1"><a class="header-anchor" href="#lang" aria-hidden="true">#</a> lang</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>en-US</code></li>\n</ul>\n<p>Language of current page.</p>\n<h3 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> description</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.description</code></li>\n</ul>\n<p>Description of current page.</p>\n<h3 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> layout</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>Layout</code></li>\n</ul>\n<p>Set the layout component of the current page.</p>\n<h3 id="permalink" tabindex="-1"><a class="header-anchor" href="#permalink" aria-hidden="true">#</a> permalink</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.permalink</code></li>\n</ul>\n<p>Refer to: <RouterLink to="/_posts/permalinks.html">Permalinks</RouterLink>.</p>\n<h3 id="metatitle" tabindex="-1"><a class="header-anchor" href="#metatitle" aria-hidden="true">#</a> metaTitle</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>`${page.title} | ${siteConfig.title}`</code></li>\n</ul>\n<p>Override the default meta title.</p>\n<h3 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> meta</h3>\n<ul>\n<li>Type: <code>array</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>Specify extra meta tags to be injected:</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token key atrule">meta</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> description\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> hello\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> keywords\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> super duper SEO\n<span class="token punctuation">---</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="predefined-variables-powered-by-default-theme" tabindex="-1"><a class="header-anchor" href="#predefined-variables-powered-by-default-theme" aria-hidden="true">#</a> Predefined Variables Powered By Default Theme</h2>\n<h3 id="navbar" tabindex="-1"><a class="header-anchor" href="#navbar" aria-hidden="true">#</a> navbar</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#disable-the-navbar">Default Theme Config &gt; Disable the Navbar</RouterLink>.</p>\n<h3 id="sidebar" tabindex="-1"><a class="header-anchor" href="#sidebar" aria-hidden="true">#</a> sidebar</h3>\n<ul>\n<li>Type: <code>boolean|\'auto\'</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#sidebar">Default Theme Config &gt; Sidebar</RouterLink>.</p>\n',date:"2018-11-07",deps:[],hoistedTags:[],links:[{raw:"./global-computed.md#frontmatter",relative:"_posts/global-computed.md",absolute:"/whats-blog-vuepress/_posts/global-computed.md"},{raw:"./permalinks.md",relative:"_posts/permalinks.md",absolute:"/whats-blog-vuepress/_posts/permalinks.md"},{raw:"../theme/default-theme-config.md#disable-the-navbar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"},{raw:"../theme/default-theme-config.md#sidebar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2018-11-07-frontmatter-in-vuepress-2.html",pathLocale:"/",permalink:"/2018/11/07/frontmatter-in-vuepress-2.html",slug:"frontmatter-in-vuepress-2",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2018-11-07-frontmatter-in-vuepress-2.md",filePathRelative:"_posts/2018-11-07-frontmatter-in-vuepress-2.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress-2.html.vue",componentFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress-2.html.vue",componentFileChunkName:"v-5f9b8c08",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress-2.html.js",dataFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress-2.html.js",dataFileChunkName:"v-5f9b8c08",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2018/11/07/frontmatter-in-vuepress-2.html",htmlFilePathRelative:"2018/11/07/frontmatter-in-vuepress-2.html",data:{key:"v-5f9b8c08",path:"/2018/11/07/frontmatter-in-vuepress-2.html",title:"frontmatter in vuepress 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 2",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}]}},{key:"v-5c31daca",path:"/2018/11/07/frontmatter-in-vuepress-3.html",title:"frontmatter in vuepress 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 3",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}],content:'\nAny markdown file that contains a YAML front matter block will be processed by [gray-matter](https://github.com/jonschlinkert/gray-matter). The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:\n\n```markdown\n---\ntitle: Blogging Like a Hacker\nlang: en-US\n---\n```\n\nBetween these triple-dashed lines, you can set predefined variables (see [below](#predefined-variables) for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code>[$frontmatter](./global-computed.md#frontmatter)</code> at the rest of the page, plus all custom and theming components.\n\n::: tip\nFront matter variables are **optional** in VuePress.\n:::\n\n## Alternative Front Matter Formats\n\nIn addition, VuePress also supports JSON or [TOML](https://github.com/toml-lang/toml) front matter.\n\nJSON front matter needs to start and end in curly braces:\n\n```\n---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n```\n\nTOML front matter needs to be explicitly marked as TOML:\n\n```\n---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n```\n\n\n## Predefined Variables\n\n### title\n\n- Type: `string`\n- Default: `h1_title || siteConfig.title`\n\nTitle of current page.\n\n### lang\n\n- Type: `string`\n- Default: `en-US`\n\nLanguage of current page.\n\n### description\n\n- Type: `string`\n- Default: `siteConfig.description`\n\nDescription of current page.\n\n### layout\n\n- Type: `string`\n- Default: `Layout`\n\nSet the layout component of the current page.\n\n### permalink\n\n- Type: `string`\n- Default: `siteConfig.permalink`\n\nRefer to: [Permalinks](./permalinks.md).\n\n### metaTitle\n\n- Type: `string`\n- Default: <code>\\`${page.title} | ${siteConfig.title}\\`</code>\n\nOverride the default meta title.\n\n### meta\n\n- Type: `array`\n- Default: `undefined`\n\nSpecify extra meta tags to be injected:\n\n``` yaml\n---\nmeta:\n  - name: description\n    content: hello\n  - name: keywords\n    content: super duper SEO\n---\n```\n\n## Predefined Variables Powered By Default Theme\n\n### navbar\n\n- Type: `boolean`\n- Default: `undefined`\n\nSee: [Default Theme Config > Disable the Navbar](../theme/default-theme-config.md#disable-the-navbar).\n\n### sidebar\n\n- Type: `boolean|\'auto\'`\n- Default: `undefined`\n\nSee: [Default Theme Config > Sidebar](../theme/default-theme-config.md#sidebar).\n',contentRendered:'<p>Any markdown file that contains a YAML front matter block will be processed by <a href="https://github.com/jonschlinkert/gray-matter" target="_blank" rel="noopener noreferrer">gray-matter<OutboundLink/></a>. The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Blogging Like a Hacker\n<span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Between these triple-dashed lines, you can set predefined variables (see <a href="#predefined-variables">below</a> for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code><RouterLink to="/_posts/global-computed.html#frontmatter">$frontmatter</RouterLink></code> at the rest of the page, plus all custom and theming components.</p>\n<div class="custom-container tip">\n<p>Front matter variables are <strong>optional</strong> in VuePress.</p>\n</div>\n<h2 id="alternative-front-matter-formats" tabindex="-1"><a class="header-anchor" href="#alternative-front-matter-formats" aria-hidden="true">#</a> Alternative Front Matter Formats</h2>\n<p>In addition, VuePress also supports JSON or <a href="https://github.com/toml-lang/toml" target="_blank" rel="noopener noreferrer">TOML<OutboundLink/></a> front matter.</p>\n<p>JSON front matter needs to start and end in curly braces:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>TOML front matter needs to be explicitly marked as TOML:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="predefined-variables" tabindex="-1"><a class="header-anchor" href="#predefined-variables" aria-hidden="true">#</a> Predefined Variables</h2>\n<h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>h1_title || siteConfig.title</code></li>\n</ul>\n<p>Title of current page.</p>\n<h3 id="lang" tabindex="-1"><a class="header-anchor" href="#lang" aria-hidden="true">#</a> lang</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>en-US</code></li>\n</ul>\n<p>Language of current page.</p>\n<h3 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> description</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.description</code></li>\n</ul>\n<p>Description of current page.</p>\n<h3 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> layout</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>Layout</code></li>\n</ul>\n<p>Set the layout component of the current page.</p>\n<h3 id="permalink" tabindex="-1"><a class="header-anchor" href="#permalink" aria-hidden="true">#</a> permalink</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.permalink</code></li>\n</ul>\n<p>Refer to: <RouterLink to="/_posts/permalinks.html">Permalinks</RouterLink>.</p>\n<h3 id="metatitle" tabindex="-1"><a class="header-anchor" href="#metatitle" aria-hidden="true">#</a> metaTitle</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>`${page.title} | ${siteConfig.title}`</code></li>\n</ul>\n<p>Override the default meta title.</p>\n<h3 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> meta</h3>\n<ul>\n<li>Type: <code>array</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>Specify extra meta tags to be injected:</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token key atrule">meta</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> description\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> hello\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> keywords\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> super duper SEO\n<span class="token punctuation">---</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="predefined-variables-powered-by-default-theme" tabindex="-1"><a class="header-anchor" href="#predefined-variables-powered-by-default-theme" aria-hidden="true">#</a> Predefined Variables Powered By Default Theme</h2>\n<h3 id="navbar" tabindex="-1"><a class="header-anchor" href="#navbar" aria-hidden="true">#</a> navbar</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#disable-the-navbar">Default Theme Config &gt; Disable the Navbar</RouterLink>.</p>\n<h3 id="sidebar" tabindex="-1"><a class="header-anchor" href="#sidebar" aria-hidden="true">#</a> sidebar</h3>\n<ul>\n<li>Type: <code>boolean|\'auto\'</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#sidebar">Default Theme Config &gt; Sidebar</RouterLink>.</p>\n',date:"2018-11-07",deps:[],hoistedTags:[],links:[{raw:"./global-computed.md#frontmatter",relative:"_posts/global-computed.md",absolute:"/whats-blog-vuepress/_posts/global-computed.md"},{raw:"./permalinks.md",relative:"_posts/permalinks.md",absolute:"/whats-blog-vuepress/_posts/permalinks.md"},{raw:"../theme/default-theme-config.md#disable-the-navbar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"},{raw:"../theme/default-theme-config.md#sidebar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2018-11-07-frontmatter-in-vuepress-3.html",pathLocale:"/",permalink:"/2018/11/07/frontmatter-in-vuepress-3.html",slug:"frontmatter-in-vuepress-3",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2018-11-07-frontmatter-in-vuepress-3.md",filePathRelative:"_posts/2018-11-07-frontmatter-in-vuepress-3.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress-3.html.vue",componentFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress-3.html.vue",componentFileChunkName:"v-5c31daca",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress-3.html.js",dataFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress-3.html.js",dataFileChunkName:"v-5c31daca",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2018/11/07/frontmatter-in-vuepress-3.html",htmlFilePathRelative:"2018/11/07/frontmatter-in-vuepress-3.html",data:{key:"v-5c31daca",path:"/2018/11/07/frontmatter-in-vuepress-3.html",title:"frontmatter in vuepress 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 3",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}]}},{key:"v-ee796afe",path:"/2018/11/07/frontmatter-in-vuepress.html",title:"frontmatter in vuepress 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 1",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:'<p>Any markdown file that contains a YAML front matter block will be processed by <a href="https://github.com/jonschlinkert/gray-matter" target="_blank" rel="noopener noreferrer">gray-matter<OutboundLink/></a>. The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>\n',headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}],content:'\nAny markdown file that contains a YAML front matter block will be processed by [gray-matter](https://github.com/jonschlinkert/gray-matter). The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:\n\n\x3c!-- more --\x3e\n\n```markdown\n---\ntitle: Blogging Like a Hacker\nlang: en-US\n---\n```\n\nBetween these triple-dashed lines, you can set predefined variables (see [below](#predefined-variables) for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code>[$frontmatter](./global-computed.md#frontmatter)</code> at the rest of the page, plus all custom and theming components.\n\n::: tip\nFront matter variables are **optional** in VuePress.\n:::\n\n## Alternative Front Matter Formats\n\nIn addition, VuePress also supports JSON or [TOML](https://github.com/toml-lang/toml) front matter.\n\nJSON front matter needs to start and end in curly braces:\n\n```\n---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n```\n\nTOML front matter needs to be explicitly marked as TOML:\n\n```\n---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n```\n\n\n## Predefined Variables\n\n### title\n\n- Type: `string`\n- Default: `h1_title || siteConfig.title`\n\nTitle of current page.\n\n### lang\n\n- Type: `string`\n- Default: `en-US`\n\nLanguage of current page.\n\n### description\n\n- Type: `string`\n- Default: `siteConfig.description`\n\nDescription of current page.\n\n### layout\n\n- Type: `string`\n- Default: `Layout`\n\nSet the layout component of the current page.\n\n### permalink\n\n- Type: `string`\n- Default: `siteConfig.permalink`\n\nRefer to: [Permalinks](./permalinks.md).\n\n### metaTitle\n\n- Type: `string`\n- Default: <code>\\`${page.title} | ${siteConfig.title}\\`</code>\n\nOverride the default meta title.\n\n### meta\n\n- Type: `array`\n- Default: `undefined`\n\nSpecify extra meta tags to be injected:\n\n``` yaml\n---\nmeta:\n  - name: description\n    content: hello\n  - name: keywords\n    content: super duper SEO\n---\n```\n\n## Predefined Variables Powered By Default Theme\n\n### navbar\n\n- Type: `boolean`\n- Default: `undefined`\n\nSee: [Default Theme Config > Disable the Navbar](../theme/default-theme-config.md#disable-the-navbar).\n\n### sidebar\n\n- Type: `boolean|\'auto\'`\n- Default: `undefined`\n\nSee: [Default Theme Config > Sidebar](../theme/default-theme-config.md#sidebar).\n',contentRendered:'<p>Any markdown file that contains a YAML front matter block will be processed by <a href="https://github.com/jonschlinkert/gray-matter" target="_blank" rel="noopener noreferrer">gray-matter<OutboundLink/></a>. The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>\n\x3c!-- more --\x3e\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Blogging Like a Hacker\n<span class="token key atrule">lang</span><span class="token punctuation">:</span> en<span class="token punctuation">-</span>US</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Between these triple-dashed lines, you can set predefined variables (see <a href="#predefined-variables">below</a> for a reference), or even create custom ones of your own. These variables will then be available to you to access using <code><RouterLink to="/_posts/global-computed.html#frontmatter">$frontmatter</RouterLink></code> at the rest of the page, plus all custom and theming components.</p>\n<div class="custom-container tip">\n<p>Front matter variables are <strong>optional</strong> in VuePress.</p>\n</div>\n<h2 id="alternative-front-matter-formats" tabindex="-1"><a class="header-anchor" href="#alternative-front-matter-formats" aria-hidden="true">#</a> Alternative Front Matter Formats</h2>\n<p>In addition, VuePress also supports JSON or <a href="https://github.com/toml-lang/toml" target="_blank" rel="noopener noreferrer">TOML<OutboundLink/></a> front matter.</p>\n<p>JSON front matter needs to start and end in curly braces:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---\n{\n  "title": "Blogging Like a Hacker",\n  "lang": "en-US"\n}\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>TOML front matter needs to be explicitly marked as TOML:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>---toml\ntitle = "Blogging Like a Hacker"\nlang = "en-US"\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="predefined-variables" tabindex="-1"><a class="header-anchor" href="#predefined-variables" aria-hidden="true">#</a> Predefined Variables</h2>\n<h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>h1_title || siteConfig.title</code></li>\n</ul>\n<p>Title of current page.</p>\n<h3 id="lang" tabindex="-1"><a class="header-anchor" href="#lang" aria-hidden="true">#</a> lang</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>en-US</code></li>\n</ul>\n<p>Language of current page.</p>\n<h3 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> description</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.description</code></li>\n</ul>\n<p>Description of current page.</p>\n<h3 id="layout" tabindex="-1"><a class="header-anchor" href="#layout" aria-hidden="true">#</a> layout</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>Layout</code></li>\n</ul>\n<p>Set the layout component of the current page.</p>\n<h3 id="permalink" tabindex="-1"><a class="header-anchor" href="#permalink" aria-hidden="true">#</a> permalink</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>siteConfig.permalink</code></li>\n</ul>\n<p>Refer to: <RouterLink to="/_posts/permalinks.html">Permalinks</RouterLink>.</p>\n<h3 id="metatitle" tabindex="-1"><a class="header-anchor" href="#metatitle" aria-hidden="true">#</a> metaTitle</h3>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>`${page.title} | ${siteConfig.title}`</code></li>\n</ul>\n<p>Override the default meta title.</p>\n<h3 id="meta" tabindex="-1"><a class="header-anchor" href="#meta" aria-hidden="true">#</a> meta</h3>\n<ul>\n<li>Type: <code>array</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>Specify extra meta tags to be injected:</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token key atrule">meta</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> description\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> hello\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> keywords\n    <span class="token key atrule">content</span><span class="token punctuation">:</span> super duper SEO\n<span class="token punctuation">---</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="predefined-variables-powered-by-default-theme" tabindex="-1"><a class="header-anchor" href="#predefined-variables-powered-by-default-theme" aria-hidden="true">#</a> Predefined Variables Powered By Default Theme</h2>\n<h3 id="navbar" tabindex="-1"><a class="header-anchor" href="#navbar" aria-hidden="true">#</a> navbar</h3>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#disable-the-navbar">Default Theme Config &gt; Disable the Navbar</RouterLink>.</p>\n<h3 id="sidebar" tabindex="-1"><a class="header-anchor" href="#sidebar" aria-hidden="true">#</a> sidebar</h3>\n<ul>\n<li>Type: <code>boolean|\'auto\'</code></li>\n<li>Default: <code>undefined</code></li>\n</ul>\n<p>See: <RouterLink to="/theme/default-theme-config.html#sidebar">Default Theme Config &gt; Sidebar</RouterLink>.</p>\n',date:"2018-11-07",deps:[],hoistedTags:[],links:[{raw:"./global-computed.md#frontmatter",relative:"_posts/global-computed.md",absolute:"/whats-blog-vuepress/_posts/global-computed.md"},{raw:"./permalinks.md",relative:"_posts/permalinks.md",absolute:"/whats-blog-vuepress/_posts/permalinks.md"},{raw:"../theme/default-theme-config.md#disable-the-navbar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"},{raw:"../theme/default-theme-config.md#sidebar",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2018-11-07-frontmatter-in-vuepress.html",pathLocale:"/",permalink:"/2018/11/07/frontmatter-in-vuepress.html",slug:"frontmatter-in-vuepress",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2018-11-07-frontmatter-in-vuepress.md",filePathRelative:"_posts/2018-11-07-frontmatter-in-vuepress.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress.html.vue",componentFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress.html.vue",componentFileChunkName:"v-ee796afe",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2018/11/07/frontmatter-in-vuepress.html.js",dataFilePathRelative:"pages/2018/11/07/frontmatter-in-vuepress.html.js",dataFileChunkName:"v-ee796afe",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2018/11/07/frontmatter-in-vuepress.html",htmlFilePathRelative:"2018/11/07/frontmatter-in-vuepress.html",data:{key:"v-ee796afe",path:"/2018/11/07/frontmatter-in-vuepress.html",title:"frontmatter in vuepress 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"frontmatter in vuepress 1",date:"2018-11-07T00:00:00.000Z",tags:["frontmatter","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:'<p>Any markdown file that contains a YAML front matter block will be processed by <a href="https://github.com/jonschlinkert/gray-matter" target="_blank" rel="noopener noreferrer">gray-matter<OutboundLink/></a>. The front matter must be the first thing in the markdown file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</p>\n',headers:[{level:2,title:"Alternative Front Matter Formats",slug:"alternative-front-matter-formats",children:[]},{level:2,title:"Predefined Variables",slug:"predefined-variables",children:[{level:3,title:"title",slug:"title",children:[]},{level:3,title:"lang",slug:"lang",children:[]},{level:3,title:"description",slug:"description",children:[]},{level:3,title:"layout",slug:"layout",children:[]},{level:3,title:"permalink",slug:"permalink",children:[]},{level:3,title:"metaTitle",slug:"metatitle",children:[]},{level:3,title:"meta",slug:"meta",children:[]}]},{level:2,title:"Predefined Variables Powered By Default Theme",slug:"predefined-variables-powered-by-default-theme",children:[{level:3,title:"navbar",slug:"navbar",children:[]},{level:3,title:"sidebar",slug:"sidebar",children:[]}]}]}},{key:"v-3b017d46",path:"/2019/02/26/markdown-slot-2.html",title:"Markdown Slot 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 2",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}],content:'\nVuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.\n\n## Why do I need Markdown Slot?\n\nFirst, let\'s review the relationship between layout components and markdown files:\n\nMarkdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use `frontmatter` to define some metadata for common data types, but `frontmatter` is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.\n\nMarkdown Slot is to solve this kind of problem.\n\n## Named Slots\n\nYou can define a named markdown slot through the following markdown syntax:\n\n``` md\n::: slot name\n\n:::\n```\n\nUse the `Content` component to use the slot in the layout component:\n\n``` vue\n<Content slot-key="name"/>\n```\n\n::: tip\nHere we are using `slot-key` instead of `slot`, because in Vue, `slot` is a reserved prop name.\n:::\n\n## Default Slot Content\n\nBy default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the `Content` component:\n\n``` vue\n<Content/>\n```\n\n## Example\n\nSuppose your layout component is as follows:\n\n``` vue\n<template>\n  <div class="container">\n    <header>\n      <Content slot-key="header"/>\n    </header>\n    <main>\n      <Content/>\n    </main>\n    <footer>\n      <Content slot-key="footer"/>\n    </footer>\n  </div>\n</template>\n```\n\nIf the markdown content of a page is like this:\n\n```md\n::: slot header\n# Here might be a page title\n:::\n\n- A Paragraph\n- Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n```\n\nThen the rendered HTML of this page will be:\n\n```html\n<div class="container">\n  <header>\n    <div class="content header">\n      <h1>Here might be a page title</h1>\n    </div>\n  </header>\n  <main>\n    <div class="content default">\n      <ul>\n        <li>A Paragraph</li>\n        <li>Another Paragraph</li>\n      </ul>\n    </div>\n  </main>\n  <footer>\n    <div class="content footer">\n      <p>Here\'s some contact info</p>\n    </div>\n  </footer>\n</div>\n```\n\nNote that:\n1. Unlike the slot mechanism provided by [Vue](https://vuejs.org/v2/guide/components-slots.html) itself, each content distribution is wrapped in a `div` whose class is `content` with the name of the slot.\n2. Please ensure the uniqueness of the slot defined.\n',contentRendered:'<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n<h2 id="why-do-i-need-markdown-slot" tabindex="-1"><a class="header-anchor" href="#why-do-i-need-markdown-slot" aria-hidden="true">#</a> Why do I need Markdown Slot?</h2>\n<p>First, let\'s review the relationship between layout components and markdown files:</p>\n<p>Markdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use <code>frontmatter</code> to define some metadata for common data types, but <code>frontmatter</code> is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.</p>\n<p>Markdown Slot is to solve this kind of problem.</p>\n<h2 id="named-slots" tabindex="-1"><a class="header-anchor" href="#named-slots" aria-hidden="true">#</a> Named Slots</h2>\n<p>You can define a named markdown slot through the following markdown syntax:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot name\n\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Use the <code>Content</code> component to use the slot in the layout component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip">\n<p>Here we are using <code>slot-key</code> instead of <code>slot</code>, because in Vue, <code>slot</code> is a reserved prop name.</p>\n</div>\n<h2 id="default-slot-content" tabindex="-1"><a class="header-anchor" href="#default-slot-content" aria-hidden="true">#</a> Default Slot Content</h2>\n<p>By default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the <code>Content</code> component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>\n<p>Suppose your layout component is as follows:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>If the markdown content of a page is like this:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot header\n<span class="token title important"><span class="token punctuation">#</span> Here might be a page title</span>\n:::\n\n<span class="token list punctuation">-</span> A Paragraph\n<span class="token list punctuation">-</span> Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Then the rendered HTML of this page will be:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Here might be a page title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>A Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Another Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here\'s some contact info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Note that:</p>\n<ol>\n<li>Unlike the slot mechanism provided by <a href="https://vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noopener noreferrer">Vue<OutboundLink/></a> itself, each content distribution is wrapped in a <code>div</code> whose class is <code>content</code> with the name of the slot.</li>\n<li>Please ensure the uniqueness of the slot defined.</li>\n</ol>\n',date:"2019-02-26",deps:[],hoistedTags:[],links:[],pathInferred:"/_posts/2019-02-26-markdown-slot-2.html",pathLocale:"/",permalink:"/2019/02/26/markdown-slot-2.html",slug:"markdown-slot-2",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-02-26-markdown-slot-2.md",filePathRelative:"_posts/2019-02-26-markdown-slot-2.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-2.html.vue",componentFilePathRelative:"pages/2019/02/26/markdown-slot-2.html.vue",componentFileChunkName:"v-3b017d46",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-2.html.js",dataFilePathRelative:"pages/2019/02/26/markdown-slot-2.html.js",dataFileChunkName:"v-3b017d46",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/02/26/markdown-slot-2.html",htmlFilePathRelative:"2019/02/26/markdown-slot-2.html",data:{key:"v-3b017d46",path:"/2019/02/26/markdown-slot-2.html",title:"Markdown Slot 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 2",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}]}},{key:"v-3cb655e5",path:"/2019/02/26/markdown-slot-3.html",title:"Markdown Slot 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 3",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}],content:'\nVuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.\n\n## Why do I need Markdown Slot?\n\nFirst, let\'s review the relationship between layout components and markdown files:\n\nMarkdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use `frontmatter` to define some metadata for common data types, but `frontmatter` is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.\n\nMarkdown Slot is to solve this kind of problem.\n\n## Named Slots\n\nYou can define a named markdown slot through the following markdown syntax:\n\n``` md\n::: slot name\n\n:::\n```\n\nUse the `Content` component to use the slot in the layout component:\n\n``` vue\n<Content slot-key="name"/>\n```\n\n::: tip\nHere we are using `slot-key` instead of `slot`, because in Vue, `slot` is a reserved prop name.\n:::\n\n## Default Slot Content\n\nBy default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the `Content` component:\n\n``` vue\n<Content/>\n```\n\n## Example\n\nSuppose your layout component is as follows:\n\n``` vue\n<template>\n  <div class="container">\n    <header>\n      <Content slot-key="header"/>\n    </header>\n    <main>\n      <Content/>\n    </main>\n    <footer>\n      <Content slot-key="footer"/>\n    </footer>\n  </div>\n</template>\n```\n\nIf the markdown content of a page is like this:\n\n```md\n::: slot header\n# Here might be a page title\n:::\n\n- A Paragraph\n- Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n```\n\nThen the rendered HTML of this page will be:\n\n```html\n<div class="container">\n  <header>\n    <div class="content header">\n      <h1>Here might be a page title</h1>\n    </div>\n  </header>\n  <main>\n    <div class="content default">\n      <ul>\n        <li>A Paragraph</li>\n        <li>Another Paragraph</li>\n      </ul>\n    </div>\n  </main>\n  <footer>\n    <div class="content footer">\n      <p>Here\'s some contact info</p>\n    </div>\n  </footer>\n</div>\n```\n\nNote that:\n1. Unlike the slot mechanism provided by [Vue](https://vuejs.org/v2/guide/components-slots.html) itself, each content distribution is wrapped in a `div` whose class is `content` with the name of the slot.\n2. Please ensure the uniqueness of the slot defined.\n',contentRendered:'<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n<h2 id="why-do-i-need-markdown-slot" tabindex="-1"><a class="header-anchor" href="#why-do-i-need-markdown-slot" aria-hidden="true">#</a> Why do I need Markdown Slot?</h2>\n<p>First, let\'s review the relationship between layout components and markdown files:</p>\n<p>Markdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use <code>frontmatter</code> to define some metadata for common data types, but <code>frontmatter</code> is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.</p>\n<p>Markdown Slot is to solve this kind of problem.</p>\n<h2 id="named-slots" tabindex="-1"><a class="header-anchor" href="#named-slots" aria-hidden="true">#</a> Named Slots</h2>\n<p>You can define a named markdown slot through the following markdown syntax:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot name\n\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Use the <code>Content</code> component to use the slot in the layout component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip">\n<p>Here we are using <code>slot-key</code> instead of <code>slot</code>, because in Vue, <code>slot</code> is a reserved prop name.</p>\n</div>\n<h2 id="default-slot-content" tabindex="-1"><a class="header-anchor" href="#default-slot-content" aria-hidden="true">#</a> Default Slot Content</h2>\n<p>By default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the <code>Content</code> component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>\n<p>Suppose your layout component is as follows:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>If the markdown content of a page is like this:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot header\n<span class="token title important"><span class="token punctuation">#</span> Here might be a page title</span>\n:::\n\n<span class="token list punctuation">-</span> A Paragraph\n<span class="token list punctuation">-</span> Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Then the rendered HTML of this page will be:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Here might be a page title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>A Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Another Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here\'s some contact info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Note that:</p>\n<ol>\n<li>Unlike the slot mechanism provided by <a href="https://vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noopener noreferrer">Vue<OutboundLink/></a> itself, each content distribution is wrapped in a <code>div</code> whose class is <code>content</code> with the name of the slot.</li>\n<li>Please ensure the uniqueness of the slot defined.</li>\n</ol>\n',date:"2019-02-26",deps:[],hoistedTags:[],links:[],pathInferred:"/_posts/2019-02-26-markdown-slot-3.html",pathLocale:"/",permalink:"/2019/02/26/markdown-slot-3.html",slug:"markdown-slot-3",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-02-26-markdown-slot-3.md",filePathRelative:"_posts/2019-02-26-markdown-slot-3.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-3.html.vue",componentFilePathRelative:"pages/2019/02/26/markdown-slot-3.html.vue",componentFileChunkName:"v-3cb655e5",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-3.html.js",dataFilePathRelative:"pages/2019/02/26/markdown-slot-3.html.js",dataFileChunkName:"v-3cb655e5",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/02/26/markdown-slot-3.html",htmlFilePathRelative:"2019/02/26/markdown-slot-3.html",data:{key:"v-3cb655e5",path:"/2019/02/26/markdown-slot-3.html",title:"Markdown Slot 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 3",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}]}},{key:"v-3e6b2e84",path:"/2019/02/26/markdown-slot-4.html",title:"Markdown Slot 4",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 4",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}],content:'\nVuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.\n\n## Why do I need Markdown Slot?\n\nFirst, let\'s review the relationship between layout components and markdown files:\n\nMarkdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use `frontmatter` to define some metadata for common data types, but `frontmatter` is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.\n\nMarkdown Slot is to solve this kind of problem.\n\n## Named Slots\n\nYou can define a named markdown slot through the following markdown syntax:\n\n``` md\n::: slot name\n\n:::\n```\n\nUse the `Content` component to use the slot in the layout component:\n\n``` vue\n<Content slot-key="name"/>\n```\n\n::: tip\nHere we are using `slot-key` instead of `slot`, because in Vue, `slot` is a reserved prop name.\n:::\n\n## Default Slot Content\n\nBy default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the `Content` component:\n\n``` vue\n<Content/>\n```\n\n## Example\n\nSuppose your layout component is as follows:\n\n``` vue\n<template>\n  <div class="container">\n    <header>\n      <Content slot-key="header"/>\n    </header>\n    <main>\n      <Content/>\n    </main>\n    <footer>\n      <Content slot-key="footer"/>\n    </footer>\n  </div>\n</template>\n```\n\nIf the markdown content of a page is like this:\n\n```md\n::: slot header\n# Here might be a page title\n:::\n\n- A Paragraph\n- Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n```\n\nThen the rendered HTML of this page will be:\n\n```html\n<div class="container">\n  <header>\n    <div class="content header">\n      <h1>Here might be a page title</h1>\n    </div>\n  </header>\n  <main>\n    <div class="content default">\n      <ul>\n        <li>A Paragraph</li>\n        <li>Another Paragraph</li>\n      </ul>\n    </div>\n  </main>\n  <footer>\n    <div class="content footer">\n      <p>Here\'s some contact info</p>\n    </div>\n  </footer>\n</div>\n```\n\nNote that:\n1. Unlike the slot mechanism provided by [Vue](https://vuejs.org/v2/guide/components-slots.html) itself, each content distribution is wrapped in a `div` whose class is `content` with the name of the slot.\n2. Please ensure the uniqueness of the slot defined.\n',contentRendered:'<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n<h2 id="why-do-i-need-markdown-slot" tabindex="-1"><a class="header-anchor" href="#why-do-i-need-markdown-slot" aria-hidden="true">#</a> Why do I need Markdown Slot?</h2>\n<p>First, let\'s review the relationship between layout components and markdown files:</p>\n<p>Markdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use <code>frontmatter</code> to define some metadata for common data types, but <code>frontmatter</code> is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.</p>\n<p>Markdown Slot is to solve this kind of problem.</p>\n<h2 id="named-slots" tabindex="-1"><a class="header-anchor" href="#named-slots" aria-hidden="true">#</a> Named Slots</h2>\n<p>You can define a named markdown slot through the following markdown syntax:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot name\n\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Use the <code>Content</code> component to use the slot in the layout component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip">\n<p>Here we are using <code>slot-key</code> instead of <code>slot</code>, because in Vue, <code>slot</code> is a reserved prop name.</p>\n</div>\n<h2 id="default-slot-content" tabindex="-1"><a class="header-anchor" href="#default-slot-content" aria-hidden="true">#</a> Default Slot Content</h2>\n<p>By default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the <code>Content</code> component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>\n<p>Suppose your layout component is as follows:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>If the markdown content of a page is like this:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot header\n<span class="token title important"><span class="token punctuation">#</span> Here might be a page title</span>\n:::\n\n<span class="token list punctuation">-</span> A Paragraph\n<span class="token list punctuation">-</span> Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Then the rendered HTML of this page will be:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Here might be a page title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>A Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Another Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here\'s some contact info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Note that:</p>\n<ol>\n<li>Unlike the slot mechanism provided by <a href="https://vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noopener noreferrer">Vue<OutboundLink/></a> itself, each content distribution is wrapped in a <code>div</code> whose class is <code>content</code> with the name of the slot.</li>\n<li>Please ensure the uniqueness of the slot defined.</li>\n</ol>\n',date:"2019-02-26",deps:[],hoistedTags:[],links:[],pathInferred:"/_posts/2019-02-26-markdown-slot-4.html",pathLocale:"/",permalink:"/2019/02/26/markdown-slot-4.html",slug:"markdown-slot-4",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-02-26-markdown-slot-4.md",filePathRelative:"_posts/2019-02-26-markdown-slot-4.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-4.html.vue",componentFilePathRelative:"pages/2019/02/26/markdown-slot-4.html.vue",componentFileChunkName:"v-3e6b2e84",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot-4.html.js",dataFilePathRelative:"pages/2019/02/26/markdown-slot-4.html.js",dataFileChunkName:"v-3e6b2e84",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/02/26/markdown-slot-4.html",htmlFilePathRelative:"2019/02/26/markdown-slot-4.html",data:{key:"v-3e6b2e84",path:"/2019/02/26/markdown-slot-4.html",title:"Markdown Slot 4",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 4",date:"2019-02-26T00:00:00.000Z",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}]}},{key:"v-37824f6a",path:"/2019/02/26/markdown-slot.html",title:"Markdown Slot 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 1",date:"2019-2-26",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}],content:'\nVuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.\n\n\x3c!-- more --\x3e\n\n## Why do I need Markdown Slot?\n\nFirst, let\'s review the relationship between layout components and markdown files:\n\nMarkdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use `frontmatter` to define some metadata for common data types, but `frontmatter` is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.\n\nMarkdown Slot is to solve this kind of problem.\n\n## Named Slots\n\nYou can define a named markdown slot through the following markdown syntax:\n\n``` md\n::: slot name\n\n:::\n```\n\nUse the `Content` component to use the slot in the layout component:\n\n``` vue\n<Content slot-key="name"/>\n```\n\n::: tip\nHere we are using `slot-key` instead of `slot`, because in Vue, `slot` is a reserved prop name.\n:::\n\n## Default Slot Content\n\nBy default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the `Content` component:\n\n``` vue\n<Content/>\n```\n\n## Example\n\nSuppose your layout component is as follows:\n\n``` vue\n<template>\n  <div class="container">\n    <header>\n      <Content slot-key="header"/>\n    </header>\n    <main>\n      <Content/>\n    </main>\n    <footer>\n      <Content slot-key="footer"/>\n    </footer>\n  </div>\n</template>\n```\n\nIf the markdown content of a page is like this:\n\n```md\n::: slot header\n# Here might be a page title\n:::\n\n- A Paragraph\n- Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n```\n\nThen the rendered HTML of this page will be:\n\n```html\n<div class="container">\n  <header>\n    <div class="content header">\n      <h1>Here might be a page title</h1>\n    </div>\n  </header>\n  <main>\n    <div class="content default">\n      <ul>\n        <li>A Paragraph</li>\n        <li>Another Paragraph</li>\n      </ul>\n    </div>\n  </main>\n  <footer>\n    <div class="content footer">\n      <p>Here\'s some contact info</p>\n    </div>\n  </footer>\n</div>\n```\n\nNote that:\n1. Unlike the slot mechanism provided by [Vue](https://vuejs.org/v2/guide/components-slots.html) itself, each content distribution is wrapped in a `div` whose class is `content` with the name of the slot.\n2. Please ensure the uniqueness of the slot defined.\n',contentRendered:'<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n\x3c!-- more --\x3e\n<h2 id="why-do-i-need-markdown-slot" tabindex="-1"><a class="header-anchor" href="#why-do-i-need-markdown-slot" aria-hidden="true">#</a> Why do I need Markdown Slot?</h2>\n<p>First, let\'s review the relationship between layout components and markdown files:</p>\n<p>Markdown files are providers of metadata (Page content, Configuration, etc.), while layout components consume them. We can use <code>frontmatter</code> to define some metadata for common data types, but <code>frontmatter</code> is hard to do something about markdown / HTML, a complex metadata that involves differences before and after compilation.</p>\n<p>Markdown Slot is to solve this kind of problem.</p>\n<h2 id="named-slots" tabindex="-1"><a class="header-anchor" href="#named-slots" aria-hidden="true">#</a> Named Slots</h2>\n<p>You can define a named markdown slot through the following markdown syntax:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot name\n\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Use the <code>Content</code> component to use the slot in the layout component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip">\n<p>Here we are using <code>slot-key</code> instead of <code>slot</code>, because in Vue, <code>slot</code> is a reserved prop name.</p>\n</div>\n<h2 id="default-slot-content" tabindex="-1"><a class="header-anchor" href="#default-slot-content" aria-hidden="true">#</a> Default Slot Content</h2>\n<p>By default, the slot-free part of a markdown file becomes the default content of a markdown slot, which you can access directly using the <code>Content</code> component:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2>\n<p>Suppose your layout component is as follows:</p>\n<div class="language-vue ext-vue line-numbers-mode"><pre v-pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token attr-name">slot-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>If the markdown content of a page is like this:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code>::: slot header\n<span class="token title important"><span class="token punctuation">#</span> Here might be a page title</span>\n:::\n\n<span class="token list punctuation">-</span> A Paragraph\n<span class="token list punctuation">-</span> Another Paragraph\n\n::: slot footer\nHere\'s some contact info\n:::\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Then the rendered HTML of this page will be:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Here might be a page title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>A Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Another Paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Here\'s some contact info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Note that:</p>\n<ol>\n<li>Unlike the slot mechanism provided by <a href="https://vuejs.org/v2/guide/components-slots.html" target="_blank" rel="noopener noreferrer">Vue<OutboundLink/></a> itself, each content distribution is wrapped in a <code>div</code> whose class is <code>content</code> with the name of the slot.</li>\n<li>Please ensure the uniqueness of the slot defined.</li>\n</ol>\n',date:"2019-02-26",deps:[],hoistedTags:[],links:[],pathInferred:"/_posts/2019-02-26-markdown-slot.html",pathLocale:"/",permalink:"/2019/02/26/markdown-slot.html",slug:"markdown-slot",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-02-26-markdown-slot.md",filePathRelative:"_posts/2019-02-26-markdown-slot.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot.html.vue",componentFilePathRelative:"pages/2019/02/26/markdown-slot.html.vue",componentFileChunkName:"v-37824f6a",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/02/26/markdown-slot.html.js",dataFilePathRelative:"pages/2019/02/26/markdown-slot.html.js",dataFileChunkName:"v-37824f6a",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/02/26/markdown-slot.html",htmlFilePathRelative:"2019/02/26/markdown-slot.html",data:{key:"v-37824f6a",path:"/2019/02/26/markdown-slot.html",title:"Markdown Slot 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Markdown Slot 1",date:"2019-2-26",tags:["markdown","vuepress"],author:"ULIVZ",location:"Hangzhou"},excerpt:"<p>VuePress implements a content distribution API for Markdown. With this feature, you can split your document into multiple fragments to facilitate flexible composition in the layout component.</p>\n",headers:[{level:2,title:"Why do I need Markdown Slot?",slug:"why-do-i-need-markdown-slot",children:[]},{level:2,title:"Named Slots",slug:"named-slots",children:[]},{level:2,title:"Default Slot Content",slug:"default-slot-content",children:[]},{level:2,title:"Example",slug:"example",children:[]}]}},{key:"v-749df0ef",path:"/2019/05/06/writing-a-vuepress-theme-2.html",title:"writing a vuepress theme 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 2",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}],content:'\nTo write a theme, create a `.vuepress/theme` directory in your docs root, and then create a `Layout.vue` file:\n\n```\n.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n```\n\nFrom there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.\n\n## Content Outlet\n\nThe compiled content of the current `.md` file being rendered will be available as a special `<Content/>` global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single `Layout.vue` component with the following content:\n\n``` html\n<template>\n  <div class="theme-container">\n    <Content/>\n  </div>\n</template>\n```\n\n**Also see:**\n\n- [Markdown Slot](../guide/markdown-slot.md)\n\n## Directory Structure\n\nJust one `Layout.vue` might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the [palette](../config/README.md#palette-styl), and even apply some plugins.\n\nSo it\'s time to reorganize your theme, an agreed theme directory structure is as follows:\n\n::: vue\ntheme\n├── `global-components`\n│   └── xxx.vue\n├── `components`\n│   └── xxx.vue\n├── `layouts`\n│   ├── Layout.vue _(**Mandatory**)_\n│   └── 404.vue\n├── `styles`\n│   ├── index.styl\n│   └── palette.styl\n├── `templates`\n│   ├── dev.html\n│   └── ssr.html\n├── `index.js`\n├── `enhanceApp.js`\n└── package.json\n:::\n\n- `theme/global-components`: Components under this directory will be automatically registered as global components. For details, please refer to [@vuepress/plugin-register-components](https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components).\n- `theme/components`: Your components.\n- `theme/layouts`: Layout components of the theme, where `Layout.vue` is required.\n- `theme/styles`: Global style and palette.\n- `theme/templates`: Modify default template.\n- `theme/index.js`: Entry file of theme configuration.\n- `theme/enhanceApp.js`: Theme level enhancements.\n\n::: warning Note\nWhen you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have `theme/index.js`, you\'ll need to set the `"main"` field  to `layouts/Layout.vue` in `package.json`, only in this way VuePress can correctly resolve the theme.\n```json\n{\n  ...\n  "main": "layouts/Layout.vue",\n  ...\n}\n```\n\n:::\n\n## Layout Component\n\nSuppose your theme layouts folder is as follows:\n\n::: vue\ntheme\n└── `layouts`\n    ├── Layout.vue\n    ├── AnotherLayout.vue\n    └── 404.vue\n:::\n\nThen, all the pages will use `Layout.vue` as layout component by default, while the routes not matching will use `404.vue`.\n\nIf you want to switch the layout of some pages to `AnotherLayout.vue`, you just need to update the frontmatter of this page:\n\n```markdown\n---\nlayout: AnotherLayout\n---\n````\n\n::: tip\nEach layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using [globalLayout](./option-api.md#globallayout)。\n:::\n\n## Apply plugins\n\nYou can apply some plugins to the theme via `theme/index.js`.\n\n```js\nmodule.exports = {\n  plugins: [\n    [\'@vuepress/pwa\', { \n      serviceWorker: true,\n      updatePopup: true\n    }]\n  ]\n}\n```\n\n## Site and Page Metadata\n\nThe `Layout` component will be invoked once for every `.md` file in `docs`, and the metadata for the entire site and that specific page will be exposed respectively as `this.$site` and `this.$page` properties which are injected into every component in the app.\n\nThis is the value of `$site` of this very website:\n\n``` json\n{\n  "title": "VuePress",\n  "description": "Vue-powered Static Site Generator",\n  "base": "/",\n  "pages": [\n    {\n      "lastUpdated": 1524027677000,\n      "path": "/",\n      "title": "VuePress",\n      "frontmatter": {}\n    },\n    ...\n  ]\n}\n```\n\n`title`, `description` and `base` are copied from respective fields in `.vuepress/config.js`. `pages` contains an array of metadata objects for each page, including its path, page title (explicitly specified in [YAML front matter](../guide/markdown.md#front-matter) or inferred from the first header on the page), and any YAML front matter data in that file.\n\nThis is the `$page` object for this page you are looking at:\n\n``` json\n{\n  "lastUpdated": 1524847549000,\n  "path": "/guide/custom-themes.html",\n  "title": "Custom Themes",\n  "headers": [/* ... */],\n  "frontmatter": {}\n}\n```\n\nIf the user provided `themeConfig` in `.vuepress/config.js`, it will also be available as `$site.themeConfig`. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with `$site.pages` to dynamically construct navigation links.\n\nFinally, don\'t forget that `this.$route` and `this.$router` are also available as part of Vue Router\'s API.\n\n::: tip\n  `lastUpdated` is the UNIX timestamp of this file\'s last git commit, for more details, refer to [Last Updated](../theme/default-theme-config.md#last-updated).\n:::\n\n## App Level Enhancements\n\nThemes can enhance the Vue app that VuePress uses by exposing an `enhanceApp.js` file at the root of the theme. The file should `export default` a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:\n\n``` js\nexport default ({\n  Vue, // the version of Vue being used in the VuePress app\n  options, // the options for the root Vue instance\n  router, // the router instance for the app\n  siteData // site metadata\n}) => {\n  // ...apply enhancements to the app\n}\n```\n',contentRendered:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n<h2 id="content-outlet" tabindex="-1"><a class="header-anchor" href="#content-outlet" aria-hidden="true">#</a> Content Outlet</h2>\n<p>The compiled content of the current <code>.md</code> file being rendered will be available as a special <code>&lt;Content/&gt;</code> global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single <code>Layout.vue</code> component with the following content:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theme-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Also see:</strong></p>\n<ul>\n<li><RouterLink to="/guide/markdown-slot.html">Markdown Slot</RouterLink></li>\n</ul>\n<h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h2>\n<p>Just one <code>Layout.vue</code> might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the <RouterLink to="/config/#palette-styl">palette</RouterLink>, and even apply some plugins.</p>\n<p>So it\'s time to reorganize your theme, an agreed theme directory structure is as follows:</p>\n<p>::: vue\ntheme\n├── <code>global-components</code>\n│   └── xxx.vue\n├── <code>components</code>\n│   └── xxx.vue\n├── <code>layouts</code>\n│   ├── Layout.vue <em>(<strong>Mandatory</strong>)</em>\n│   └── 404.vue\n├── <code>styles</code>\n│   ├── index.styl\n│   └── palette.styl\n├── <code>templates</code>\n│   ├── dev.html\n│   └── ssr.html\n├── <code>index.js</code>\n├── <code>enhanceApp.js</code>\n└── package.json\n:::</p>\n<ul>\n<li><code>theme/global-components</code>: Components under this directory will be automatically registered as global components. For details, please refer to <a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components" target="_blank" rel="noopener noreferrer">@vuepress/plugin-register-components<OutboundLink/></a>.</li>\n<li><code>theme/components</code>: Your components.</li>\n<li><code>theme/layouts</code>: Layout components of the theme, where <code>Layout.vue</code> is required.</li>\n<li><code>theme/styles</code>: Global style and palette.</li>\n<li><code>theme/templates</code>: Modify default template.</li>\n<li><code>theme/index.js</code>: Entry file of theme configuration.</li>\n<li><code>theme/enhanceApp.js</code>: Theme level enhancements.</li>\n</ul>\n<div class="custom-container warning"><p class="custom-container-title">Note</p>\n<p>When you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have <code>theme/index.js</code>, you\'ll need to set the <code>&quot;main&quot;</code> field  to <code>layouts/Layout.vue</code> in <code>package.json</code>, only in this way VuePress can correctly resolve the theme.</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"layouts/Layout.vue"</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>\n<h2 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h2>\n<p>Suppose your theme layouts folder is as follows:</p>\n<p>::: vue\ntheme\n└── <code>layouts</code>\n   ├── Layout.vue\n   ├── AnotherLayout.vue\n   └── 404.vue\n:::</p>\n<p>Then, all the pages will use <code>Layout.vue</code> as layout component by default, while the routes not matching will use <code>404.vue</code>.</p>\n<p>If you want to switch the layout of some pages to <code>AnotherLayout.vue</code>, you just need to update the frontmatter of this page:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> AnotherLayout</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip">\n<p>Each layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using <RouterLink to="/_posts/option-api.html#globallayout">globalLayout</RouterLink>。</p>\n</div>\n<h2 id="apply-plugins" tabindex="-1"><a class="header-anchor" href="#apply-plugins" aria-hidden="true">#</a> Apply plugins</h2>\n<p>You can apply some plugins to the theme via <code>theme/index.js</code>.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'@vuepress/pwa\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> \n      serviceWorker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      updatePopup<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="site-and-page-metadata" tabindex="-1"><a class="header-anchor" href="#site-and-page-metadata" aria-hidden="true">#</a> Site and Page Metadata</h2>\n<p>The <code>Layout</code> component will be invoked once for every <code>.md</code> file in <code>docs</code>, and the metadata for the entire site and that specific page will be exposed respectively as <code>this.$site</code> and <code>this.$page</code> properties which are injected into every component in the app.</p>\n<p>This is the value of <code>$site</code> of this very website:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Vue-powered Static Site Generator"</span><span class="token punctuation">,</span>\n  <span class="token property">"base"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524027677000</span><span class="token punctuation">,</span>\n      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n      <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>title</code>, <code>description</code> and <code>base</code> are copied from respective fields in <code>.vuepress/config.js</code>. <code>pages</code> contains an array of metadata objects for each page, including its path, page title (explicitly specified in <RouterLink to="/guide/markdown.html#front-matter">YAML front matter</RouterLink> or inferred from the first header on the page), and any YAML front matter data in that file.</p>\n<p>This is the <code>$page</code> object for this page you are looking at:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524847549000</span><span class="token punctuation">,</span>\n  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/guide/custom-themes.html"</span><span class="token punctuation">,</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Custom Themes"</span><span class="token punctuation">,</span>\n  <span class="token property">"headers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If the user provided <code>themeConfig</code> in <code>.vuepress/config.js</code>, it will also be available as <code>$site.themeConfig</code>. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with <code>$site.pages</code> to dynamically construct navigation links.</p>\n<p>Finally, don\'t forget that <code>this.$route</code> and <code>this.$router</code> are also available as part of Vue Router\'s API.</p>\n<div class="custom-container tip">\n<p><code>lastUpdated</code> is the UNIX timestamp of this file\'s last git commit, for more details, refer to <RouterLink to="/theme/default-theme-config.html#last-updated">Last Updated</RouterLink>.</p>\n</div>\n<h2 id="app-level-enhancements" tabindex="-1"><a class="header-anchor" href="#app-level-enhancements" aria-hidden="true">#</a> App Level Enhancements</h2>\n<p>Themes can enhance the Vue app that VuePress uses by exposing an <code>enhanceApp.js</code> file at the root of the theme. The file should <code>export default</code> a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>\n  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>\n  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>\n  siteData <span class="token comment">// site metadata</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...apply enhancements to the app</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"2019-05-06",deps:[],hoistedTags:[],links:[{raw:"../guide/markdown-slot.md",relative:"guide/markdown-slot.md",absolute:"/whats-blog-vuepress/guide/markdown-slot.md"},{raw:"../config/README.md#palette-styl",relative:"config/README.md",absolute:"/whats-blog-vuepress/config/README.md"},{raw:"./option-api.md#globallayout",relative:"_posts/option-api.md",absolute:"/whats-blog-vuepress/_posts/option-api.md"},{raw:"../guide/markdown.md#front-matter",relative:"guide/markdown.md",absolute:"/whats-blog-vuepress/guide/markdown.md"},{raw:"../theme/default-theme-config.md#last-updated",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2019-05-06-writing-a-vuepress-theme-2.html",pathLocale:"/",permalink:"/2019/05/06/writing-a-vuepress-theme-2.html",slug:"writing-a-vuepress-theme-2",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-05-06-writing-a-vuepress-theme-2.md",filePathRelative:"_posts/2019-05-06-writing-a-vuepress-theme-2.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-2.html.vue",componentFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-2.html.vue",componentFileChunkName:"v-749df0ef",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-2.html.js",dataFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-2.html.js",dataFileChunkName:"v-749df0ef",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/05/06/writing-a-vuepress-theme-2.html",htmlFilePathRelative:"2019/05/06/writing-a-vuepress-theme-2.html",data:{key:"v-749df0ef",path:"/2019/05/06/writing-a-vuepress-theme-2.html",title:"writing a vuepress theme 2",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 2",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}]}},{key:"v-7652c98e",path:"/2019/05/06/writing-a-vuepress-theme-3.html",title:"writing a vuepress theme 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 3",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}],content:'\nTo write a theme, create a `.vuepress/theme` directory in your docs root, and then create a `Layout.vue` file:\n\n```\n.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n```\n\nFrom there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.\n\n## Content Outlet\n\nThe compiled content of the current `.md` file being rendered will be available as a special `<Content/>` global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single `Layout.vue` component with the following content:\n\n``` html\n<template>\n  <div class="theme-container">\n    <Content/>\n  </div>\n</template>\n```\n\n**Also see:**\n\n- [Markdown Slot](../guide/markdown-slot.md)\n\n## Directory Structure\n\nJust one `Layout.vue` might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the [palette](../config/README.md#palette-styl), and even apply some plugins.\n\nSo it\'s time to reorganize your theme, an agreed theme directory structure is as follows:\n\n::: vue\ntheme\n├── `global-components`\n│   └── xxx.vue\n├── `components`\n│   └── xxx.vue\n├── `layouts`\n│   ├── Layout.vue _(**Mandatory**)_\n│   └── 404.vue\n├── `styles`\n│   ├── index.styl\n│   └── palette.styl\n├── `templates`\n│   ├── dev.html\n│   └── ssr.html\n├── `index.js`\n├── `enhanceApp.js`\n└── package.json\n:::\n\n- `theme/global-components`: Components under this directory will be automatically registered as global components. For details, please refer to [@vuepress/plugin-register-components](https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components).\n- `theme/components`: Your components.\n- `theme/layouts`: Layout components of the theme, where `Layout.vue` is required.\n- `theme/styles`: Global style and palette.\n- `theme/templates`: Modify default template.\n- `theme/index.js`: Entry file of theme configuration.\n- `theme/enhanceApp.js`: Theme level enhancements.\n\n::: warning Note\nWhen you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have `theme/index.js`, you\'ll need to set the `"main"` field  to `layouts/Layout.vue` in `package.json`, only in this way VuePress can correctly resolve the theme.\n```json\n{\n  ...\n  "main": "layouts/Layout.vue",\n  ...\n}\n```\n\n:::\n\n## Layout Component\n\nSuppose your theme layouts folder is as follows:\n\n::: vue\ntheme\n└── `layouts`\n    ├── Layout.vue\n    ├── AnotherLayout.vue\n    └── 404.vue\n:::\n\nThen, all the pages will use `Layout.vue` as layout component by default, while the routes not matching will use `404.vue`.\n\nIf you want to switch the layout of some pages to `AnotherLayout.vue`, you just need to update the frontmatter of this page:\n\n```markdown\n---\nlayout: AnotherLayout\n---\n````\n\n::: tip\nEach layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using [globalLayout](./option-api.md#globallayout)。\n:::\n\n## Apply plugins\n\nYou can apply some plugins to the theme via `theme/index.js`.\n\n```js\nmodule.exports = {\n  plugins: [\n    [\'@vuepress/pwa\', { \n      serviceWorker: true,\n      updatePopup: true\n    }]\n  ]\n}\n```\n\n## Site and Page Metadata\n\nThe `Layout` component will be invoked once for every `.md` file in `docs`, and the metadata for the entire site and that specific page will be exposed respectively as `this.$site` and `this.$page` properties which are injected into every component in the app.\n\nThis is the value of `$site` of this very website:\n\n``` json\n{\n  "title": "VuePress",\n  "description": "Vue-powered Static Site Generator",\n  "base": "/",\n  "pages": [\n    {\n      "lastUpdated": 1524027677000,\n      "path": "/",\n      "title": "VuePress",\n      "frontmatter": {}\n    },\n    ...\n  ]\n}\n```\n\n`title`, `description` and `base` are copied from respective fields in `.vuepress/config.js`. `pages` contains an array of metadata objects for each page, including its path, page title (explicitly specified in [YAML front matter](../guide/markdown.md#front-matter) or inferred from the first header on the page), and any YAML front matter data in that file.\n\nThis is the `$page` object for this page you are looking at:\n\n``` json\n{\n  "lastUpdated": 1524847549000,\n  "path": "/guide/custom-themes.html",\n  "title": "Custom Themes",\n  "headers": [/* ... */],\n  "frontmatter": {}\n}\n```\n\nIf the user provided `themeConfig` in `.vuepress/config.js`, it will also be available as `$site.themeConfig`. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with `$site.pages` to dynamically construct navigation links.\n\nFinally, don\'t forget that `this.$route` and `this.$router` are also available as part of Vue Router\'s API.\n\n::: tip\n  `lastUpdated` is the UNIX timestamp of this file\'s last git commit, for more details, refer to [Last Updated](../theme/default-theme-config.md#last-updated).\n:::\n\n## App Level Enhancements\n\nThemes can enhance the Vue app that VuePress uses by exposing an `enhanceApp.js` file at the root of the theme. The file should `export default` a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:\n\n``` js\nexport default ({\n  Vue, // the version of Vue being used in the VuePress app\n  options, // the options for the root Vue instance\n  router, // the router instance for the app\n  siteData // site metadata\n}) => {\n  // ...apply enhancements to the app\n}\n```\n',contentRendered:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n<h2 id="content-outlet" tabindex="-1"><a class="header-anchor" href="#content-outlet" aria-hidden="true">#</a> Content Outlet</h2>\n<p>The compiled content of the current <code>.md</code> file being rendered will be available as a special <code>&lt;Content/&gt;</code> global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single <code>Layout.vue</code> component with the following content:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theme-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Also see:</strong></p>\n<ul>\n<li><RouterLink to="/guide/markdown-slot.html">Markdown Slot</RouterLink></li>\n</ul>\n<h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h2>\n<p>Just one <code>Layout.vue</code> might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the <RouterLink to="/config/#palette-styl">palette</RouterLink>, and even apply some plugins.</p>\n<p>So it\'s time to reorganize your theme, an agreed theme directory structure is as follows:</p>\n<p>::: vue\ntheme\n├── <code>global-components</code>\n│   └── xxx.vue\n├── <code>components</code>\n│   └── xxx.vue\n├── <code>layouts</code>\n│   ├── Layout.vue <em>(<strong>Mandatory</strong>)</em>\n│   └── 404.vue\n├── <code>styles</code>\n│   ├── index.styl\n│   └── palette.styl\n├── <code>templates</code>\n│   ├── dev.html\n│   └── ssr.html\n├── <code>index.js</code>\n├── <code>enhanceApp.js</code>\n└── package.json\n:::</p>\n<ul>\n<li><code>theme/global-components</code>: Components under this directory will be automatically registered as global components. For details, please refer to <a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components" target="_blank" rel="noopener noreferrer">@vuepress/plugin-register-components<OutboundLink/></a>.</li>\n<li><code>theme/components</code>: Your components.</li>\n<li><code>theme/layouts</code>: Layout components of the theme, where <code>Layout.vue</code> is required.</li>\n<li><code>theme/styles</code>: Global style and palette.</li>\n<li><code>theme/templates</code>: Modify default template.</li>\n<li><code>theme/index.js</code>: Entry file of theme configuration.</li>\n<li><code>theme/enhanceApp.js</code>: Theme level enhancements.</li>\n</ul>\n<div class="custom-container warning"><p class="custom-container-title">Note</p>\n<p>When you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have <code>theme/index.js</code>, you\'ll need to set the <code>&quot;main&quot;</code> field  to <code>layouts/Layout.vue</code> in <code>package.json</code>, only in this way VuePress can correctly resolve the theme.</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"layouts/Layout.vue"</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>\n<h2 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h2>\n<p>Suppose your theme layouts folder is as follows:</p>\n<p>::: vue\ntheme\n└── <code>layouts</code>\n   ├── Layout.vue\n   ├── AnotherLayout.vue\n   └── 404.vue\n:::</p>\n<p>Then, all the pages will use <code>Layout.vue</code> as layout component by default, while the routes not matching will use <code>404.vue</code>.</p>\n<p>If you want to switch the layout of some pages to <code>AnotherLayout.vue</code>, you just need to update the frontmatter of this page:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> AnotherLayout</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip">\n<p>Each layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using <RouterLink to="/_posts/option-api.html#globallayout">globalLayout</RouterLink>。</p>\n</div>\n<h2 id="apply-plugins" tabindex="-1"><a class="header-anchor" href="#apply-plugins" aria-hidden="true">#</a> Apply plugins</h2>\n<p>You can apply some plugins to the theme via <code>theme/index.js</code>.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'@vuepress/pwa\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> \n      serviceWorker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      updatePopup<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="site-and-page-metadata" tabindex="-1"><a class="header-anchor" href="#site-and-page-metadata" aria-hidden="true">#</a> Site and Page Metadata</h2>\n<p>The <code>Layout</code> component will be invoked once for every <code>.md</code> file in <code>docs</code>, and the metadata for the entire site and that specific page will be exposed respectively as <code>this.$site</code> and <code>this.$page</code> properties which are injected into every component in the app.</p>\n<p>This is the value of <code>$site</code> of this very website:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Vue-powered Static Site Generator"</span><span class="token punctuation">,</span>\n  <span class="token property">"base"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524027677000</span><span class="token punctuation">,</span>\n      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n      <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>title</code>, <code>description</code> and <code>base</code> are copied from respective fields in <code>.vuepress/config.js</code>. <code>pages</code> contains an array of metadata objects for each page, including its path, page title (explicitly specified in <RouterLink to="/guide/markdown.html#front-matter">YAML front matter</RouterLink> or inferred from the first header on the page), and any YAML front matter data in that file.</p>\n<p>This is the <code>$page</code> object for this page you are looking at:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524847549000</span><span class="token punctuation">,</span>\n  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/guide/custom-themes.html"</span><span class="token punctuation">,</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Custom Themes"</span><span class="token punctuation">,</span>\n  <span class="token property">"headers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If the user provided <code>themeConfig</code> in <code>.vuepress/config.js</code>, it will also be available as <code>$site.themeConfig</code>. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with <code>$site.pages</code> to dynamically construct navigation links.</p>\n<p>Finally, don\'t forget that <code>this.$route</code> and <code>this.$router</code> are also available as part of Vue Router\'s API.</p>\n<div class="custom-container tip">\n<p><code>lastUpdated</code> is the UNIX timestamp of this file\'s last git commit, for more details, refer to <RouterLink to="/theme/default-theme-config.html#last-updated">Last Updated</RouterLink>.</p>\n</div>\n<h2 id="app-level-enhancements" tabindex="-1"><a class="header-anchor" href="#app-level-enhancements" aria-hidden="true">#</a> App Level Enhancements</h2>\n<p>Themes can enhance the Vue app that VuePress uses by exposing an <code>enhanceApp.js</code> file at the root of the theme. The file should <code>export default</code> a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>\n  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>\n  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>\n  siteData <span class="token comment">// site metadata</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...apply enhancements to the app</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"2019-05-06",deps:[],hoistedTags:[],links:[{raw:"../guide/markdown-slot.md",relative:"guide/markdown-slot.md",absolute:"/whats-blog-vuepress/guide/markdown-slot.md"},{raw:"../config/README.md#palette-styl",relative:"config/README.md",absolute:"/whats-blog-vuepress/config/README.md"},{raw:"./option-api.md#globallayout",relative:"_posts/option-api.md",absolute:"/whats-blog-vuepress/_posts/option-api.md"},{raw:"../guide/markdown.md#front-matter",relative:"guide/markdown.md",absolute:"/whats-blog-vuepress/guide/markdown.md"},{raw:"../theme/default-theme-config.md#last-updated",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2019-05-06-writing-a-vuepress-theme-3.html",pathLocale:"/",permalink:"/2019/05/06/writing-a-vuepress-theme-3.html",slug:"writing-a-vuepress-theme-3",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-05-06-writing-a-vuepress-theme-3.md",filePathRelative:"_posts/2019-05-06-writing-a-vuepress-theme-3.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-3.html.vue",componentFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-3.html.vue",componentFileChunkName:"v-7652c98e",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-3.html.js",dataFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-3.html.js",dataFileChunkName:"v-7652c98e",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/05/06/writing-a-vuepress-theme-3.html",htmlFilePathRelative:"2019/05/06/writing-a-vuepress-theme-3.html",data:{key:"v-7652c98e",path:"/2019/05/06/writing-a-vuepress-theme-3.html",title:"writing a vuepress theme 3",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 3",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}]}},{key:"v-7807a22d",path:"/2019/05/06/writing-a-vuepress-theme-4.html",title:"writing a vuepress theme 4",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 4",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}],content:'\nTo write a theme, create a `.vuepress/theme` directory in your docs root, and then create a `Layout.vue` file:\n\n```\n.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n```\n\nFrom there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.\n\n## Content Outlet\n\nThe compiled content of the current `.md` file being rendered will be available as a special `<Content/>` global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single `Layout.vue` component with the following content:\n\n``` html\n<template>\n  <div class="theme-container">\n    <Content/>\n  </div>\n</template>\n```\n\n**Also see:**\n\n- [Markdown Slot](../guide/markdown-slot.md)\n\n## Directory Structure\n\nJust one `Layout.vue` might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the [palette](../config/README.md#palette-styl), and even apply some plugins.\n\nSo it\'s time to reorganize your theme, an agreed theme directory structure is as follows:\n\n::: vue\ntheme\n├── `global-components`\n│   └── xxx.vue\n├── `components`\n│   └── xxx.vue\n├── `layouts`\n│   ├── Layout.vue _(**Mandatory**)_\n│   └── 404.vue\n├── `styles`\n│   ├── index.styl\n│   └── palette.styl\n├── `templates`\n│   ├── dev.html\n│   └── ssr.html\n├── `index.js`\n├── `enhanceApp.js`\n└── package.json\n:::\n\n- `theme/global-components`: Components under this directory will be automatically registered as global components. For details, please refer to [@vuepress/plugin-register-components](https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components).\n- `theme/components`: Your components.\n- `theme/layouts`: Layout components of the theme, where `Layout.vue` is required.\n- `theme/styles`: Global style and palette.\n- `theme/templates`: Modify default template.\n- `theme/index.js`: Entry file of theme configuration.\n- `theme/enhanceApp.js`: Theme level enhancements.\n\n::: warning Note\nWhen you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have `theme/index.js`, you\'ll need to set the `"main"` field  to `layouts/Layout.vue` in `package.json`, only in this way VuePress can correctly resolve the theme.\n```json\n{\n  ...\n  "main": "layouts/Layout.vue",\n  ...\n}\n```\n\n:::\n\n## Layout Component\n\nSuppose your theme layouts folder is as follows:\n\n::: vue\ntheme\n└── `layouts`\n    ├── Layout.vue\n    ├── AnotherLayout.vue\n    └── 404.vue\n:::\n\nThen, all the pages will use `Layout.vue` as layout component by default, while the routes not matching will use `404.vue`.\n\nIf you want to switch the layout of some pages to `AnotherLayout.vue`, you just need to update the frontmatter of this page:\n\n```markdown\n---\nlayout: AnotherLayout\n---\n````\n\n::: tip\nEach layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using [globalLayout](./option-api.md#globallayout)。\n:::\n\n## Apply plugins\n\nYou can apply some plugins to the theme via `theme/index.js`.\n\n```js\nmodule.exports = {\n  plugins: [\n    [\'@vuepress/pwa\', { \n      serviceWorker: true,\n      updatePopup: true\n    }]\n  ]\n}\n```\n\n## Site and Page Metadata\n\nThe `Layout` component will be invoked once for every `.md` file in `docs`, and the metadata for the entire site and that specific page will be exposed respectively as `this.$site` and `this.$page` properties which are injected into every component in the app.\n\nThis is the value of `$site` of this very website:\n\n``` json\n{\n  "title": "VuePress",\n  "description": "Vue-powered Static Site Generator",\n  "base": "/",\n  "pages": [\n    {\n      "lastUpdated": 1524027677000,\n      "path": "/",\n      "title": "VuePress",\n      "frontmatter": {}\n    },\n    ...\n  ]\n}\n```\n\n`title`, `description` and `base` are copied from respective fields in `.vuepress/config.js`. `pages` contains an array of metadata objects for each page, including its path, page title (explicitly specified in [YAML front matter](../guide/markdown.md#front-matter) or inferred from the first header on the page), and any YAML front matter data in that file.\n\nThis is the `$page` object for this page you are looking at:\n\n``` json\n{\n  "lastUpdated": 1524847549000,\n  "path": "/guide/custom-themes.html",\n  "title": "Custom Themes",\n  "headers": [/* ... */],\n  "frontmatter": {}\n}\n```\n\nIf the user provided `themeConfig` in `.vuepress/config.js`, it will also be available as `$site.themeConfig`. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with `$site.pages` to dynamically construct navigation links.\n\nFinally, don\'t forget that `this.$route` and `this.$router` are also available as part of Vue Router\'s API.\n\n::: tip\n  `lastUpdated` is the UNIX timestamp of this file\'s last git commit, for more details, refer to [Last Updated](../theme/default-theme-config.md#last-updated).\n:::\n\n## App Level Enhancements\n\nThemes can enhance the Vue app that VuePress uses by exposing an `enhanceApp.js` file at the root of the theme. The file should `export default` a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:\n\n``` js\nexport default ({\n  Vue, // the version of Vue being used in the VuePress app\n  options, // the options for the root Vue instance\n  router, // the router instance for the app\n  siteData // site metadata\n}) => {\n  // ...apply enhancements to the app\n}\n```\n',contentRendered:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n<h2 id="content-outlet" tabindex="-1"><a class="header-anchor" href="#content-outlet" aria-hidden="true">#</a> Content Outlet</h2>\n<p>The compiled content of the current <code>.md</code> file being rendered will be available as a special <code>&lt;Content/&gt;</code> global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single <code>Layout.vue</code> component with the following content:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theme-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Also see:</strong></p>\n<ul>\n<li><RouterLink to="/guide/markdown-slot.html">Markdown Slot</RouterLink></li>\n</ul>\n<h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h2>\n<p>Just one <code>Layout.vue</code> might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the <RouterLink to="/config/#palette-styl">palette</RouterLink>, and even apply some plugins.</p>\n<p>So it\'s time to reorganize your theme, an agreed theme directory structure is as follows:</p>\n<p>::: vue\ntheme\n├── <code>global-components</code>\n│   └── xxx.vue\n├── <code>components</code>\n│   └── xxx.vue\n├── <code>layouts</code>\n│   ├── Layout.vue <em>(<strong>Mandatory</strong>)</em>\n│   └── 404.vue\n├── <code>styles</code>\n│   ├── index.styl\n│   └── palette.styl\n├── <code>templates</code>\n│   ├── dev.html\n│   └── ssr.html\n├── <code>index.js</code>\n├── <code>enhanceApp.js</code>\n└── package.json\n:::</p>\n<ul>\n<li><code>theme/global-components</code>: Components under this directory will be automatically registered as global components. For details, please refer to <a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components" target="_blank" rel="noopener noreferrer">@vuepress/plugin-register-components<OutboundLink/></a>.</li>\n<li><code>theme/components</code>: Your components.</li>\n<li><code>theme/layouts</code>: Layout components of the theme, where <code>Layout.vue</code> is required.</li>\n<li><code>theme/styles</code>: Global style and palette.</li>\n<li><code>theme/templates</code>: Modify default template.</li>\n<li><code>theme/index.js</code>: Entry file of theme configuration.</li>\n<li><code>theme/enhanceApp.js</code>: Theme level enhancements.</li>\n</ul>\n<div class="custom-container warning"><p class="custom-container-title">Note</p>\n<p>When you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have <code>theme/index.js</code>, you\'ll need to set the <code>&quot;main&quot;</code> field  to <code>layouts/Layout.vue</code> in <code>package.json</code>, only in this way VuePress can correctly resolve the theme.</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"layouts/Layout.vue"</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>\n<h2 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h2>\n<p>Suppose your theme layouts folder is as follows:</p>\n<p>::: vue\ntheme\n└── <code>layouts</code>\n   ├── Layout.vue\n   ├── AnotherLayout.vue\n   └── 404.vue\n:::</p>\n<p>Then, all the pages will use <code>Layout.vue</code> as layout component by default, while the routes not matching will use <code>404.vue</code>.</p>\n<p>If you want to switch the layout of some pages to <code>AnotherLayout.vue</code>, you just need to update the frontmatter of this page:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> AnotherLayout</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip">\n<p>Each layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using <RouterLink to="/_posts/option-api.html#globallayout">globalLayout</RouterLink>。</p>\n</div>\n<h2 id="apply-plugins" tabindex="-1"><a class="header-anchor" href="#apply-plugins" aria-hidden="true">#</a> Apply plugins</h2>\n<p>You can apply some plugins to the theme via <code>theme/index.js</code>.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'@vuepress/pwa\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> \n      serviceWorker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      updatePopup<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="site-and-page-metadata" tabindex="-1"><a class="header-anchor" href="#site-and-page-metadata" aria-hidden="true">#</a> Site and Page Metadata</h2>\n<p>The <code>Layout</code> component will be invoked once for every <code>.md</code> file in <code>docs</code>, and the metadata for the entire site and that specific page will be exposed respectively as <code>this.$site</code> and <code>this.$page</code> properties which are injected into every component in the app.</p>\n<p>This is the value of <code>$site</code> of this very website:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Vue-powered Static Site Generator"</span><span class="token punctuation">,</span>\n  <span class="token property">"base"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524027677000</span><span class="token punctuation">,</span>\n      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n      <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>title</code>, <code>description</code> and <code>base</code> are copied from respective fields in <code>.vuepress/config.js</code>. <code>pages</code> contains an array of metadata objects for each page, including its path, page title (explicitly specified in <RouterLink to="/guide/markdown.html#front-matter">YAML front matter</RouterLink> or inferred from the first header on the page), and any YAML front matter data in that file.</p>\n<p>This is the <code>$page</code> object for this page you are looking at:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524847549000</span><span class="token punctuation">,</span>\n  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/guide/custom-themes.html"</span><span class="token punctuation">,</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Custom Themes"</span><span class="token punctuation">,</span>\n  <span class="token property">"headers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If the user provided <code>themeConfig</code> in <code>.vuepress/config.js</code>, it will also be available as <code>$site.themeConfig</code>. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with <code>$site.pages</code> to dynamically construct navigation links.</p>\n<p>Finally, don\'t forget that <code>this.$route</code> and <code>this.$router</code> are also available as part of Vue Router\'s API.</p>\n<div class="custom-container tip">\n<p><code>lastUpdated</code> is the UNIX timestamp of this file\'s last git commit, for more details, refer to <RouterLink to="/theme/default-theme-config.html#last-updated">Last Updated</RouterLink>.</p>\n</div>\n<h2 id="app-level-enhancements" tabindex="-1"><a class="header-anchor" href="#app-level-enhancements" aria-hidden="true">#</a> App Level Enhancements</h2>\n<p>Themes can enhance the Vue app that VuePress uses by exposing an <code>enhanceApp.js</code> file at the root of the theme. The file should <code>export default</code> a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>\n  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>\n  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>\n  siteData <span class="token comment">// site metadata</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...apply enhancements to the app</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"2019-05-06",deps:[],hoistedTags:[],links:[{raw:"../guide/markdown-slot.md",relative:"guide/markdown-slot.md",absolute:"/whats-blog-vuepress/guide/markdown-slot.md"},{raw:"../config/README.md#palette-styl",relative:"config/README.md",absolute:"/whats-blog-vuepress/config/README.md"},{raw:"./option-api.md#globallayout",relative:"_posts/option-api.md",absolute:"/whats-blog-vuepress/_posts/option-api.md"},{raw:"../guide/markdown.md#front-matter",relative:"guide/markdown.md",absolute:"/whats-blog-vuepress/guide/markdown.md"},{raw:"../theme/default-theme-config.md#last-updated",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2019-05-06-writing-a-vuepress-theme-4.html",pathLocale:"/",permalink:"/2019/05/06/writing-a-vuepress-theme-4.html",slug:"writing-a-vuepress-theme-4",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-05-06-writing-a-vuepress-theme-4.md",filePathRelative:"_posts/2019-05-06-writing-a-vuepress-theme-4.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-4.html.vue",componentFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-4.html.vue",componentFileChunkName:"v-7807a22d",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme-4.html.js",dataFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme-4.html.js",dataFileChunkName:"v-7807a22d",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/05/06/writing-a-vuepress-theme-4.html",htmlFilePathRelative:"2019/05/06/writing-a-vuepress-theme-4.html",data:{key:"v-7807a22d",path:"/2019/05/06/writing-a-vuepress-theme-4.html",title:"writing a vuepress theme 4",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 4",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}]}},{key:"v-daf3bb98",path:"/2019/05/06/writing-a-vuepress-theme.html",title:"Writing a vuepress theme 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Writing a vuepress theme 1",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n',headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}],content:'\nTo write a theme, create a `.vuepress/theme` directory in your docs root, and then create a `Layout.vue` file:\n\n```\n.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n```\n\nFrom there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.\n\n\x3c!-- more --\x3e\n\n## Content Outlet\n\nThe compiled content of the current `.md` file being rendered will be available as a special `<Content/>` global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single `Layout.vue` component with the following content:\n\n``` html\n<template>\n  <div class="theme-container">\n    <Content/>\n  </div>\n</template>\n```\n\n**Also see:**\n\n- [Markdown Slot](../guide/markdown-slot.md)\n\n## Directory Structure\n\nJust one `Layout.vue` might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the [palette](../config/README.md#palette-styl), and even apply some plugins.\n\nSo it\'s time to reorganize your theme, an agreed theme directory structure is as follows:\n\n::: vue\ntheme\n├── `global-components`\n│   └── xxx.vue\n├── `components`\n│   └── xxx.vue\n├── `layouts`\n│   ├── Layout.vue _(**Mandatory**)_\n│   └── 404.vue\n├── `styles`\n│   ├── index.styl\n│   └── palette.styl\n├── `templates`\n│   ├── dev.html\n│   └── ssr.html\n├── `index.js`\n├── `enhanceApp.js`\n└── package.json\n:::\n\n- `theme/global-components`: Components under this directory will be automatically registered as global components. For details, please refer to [@vuepress/plugin-register-components](https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components).\n- `theme/components`: Your components.\n- `theme/layouts`: Layout components of the theme, where `Layout.vue` is required.\n- `theme/styles`: Global style and palette.\n- `theme/templates`: Modify default template.\n- `theme/index.js`: Entry file of theme configuration.\n- `theme/enhanceApp.js`: Theme level enhancements.\n\n::: warning Note\nWhen you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have `theme/index.js`, you\'ll need to set the `"main"` field  to `layouts/Layout.vue` in `package.json`, only in this way VuePress can correctly resolve the theme.\n```json\n{\n  ...\n  "main": "layouts/Layout.vue",\n  ...\n}\n```\n\n:::\n\n## Layout Component\n\nSuppose your theme layouts folder is as follows:\n\n::: vue\ntheme\n└── `layouts`\n    ├── Layout.vue\n    ├── AnotherLayout.vue\n    └── 404.vue\n:::\n\nThen, all the pages will use `Layout.vue` as layout component by default, while the routes not matching will use `404.vue`.\n\nIf you want to switch the layout of some pages to `AnotherLayout.vue`, you just need to update the frontmatter of this page:\n\n```markdown\n---\nlayout: AnotherLayout\n---\n````\n\n::: tip\nEach layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using [globalLayout](./option-api.md#globallayout)。\n:::\n\n## Apply plugins\n\nYou can apply some plugins to the theme via `theme/index.js`.\n\n```js\nmodule.exports = {\n  plugins: [\n    [\'@vuepress/pwa\', { \n      serviceWorker: true,\n      updatePopup: true\n    }]\n  ]\n}\n```\n\n## Site and Page Metadata\n\nThe `Layout` component will be invoked once for every `.md` file in `docs`, and the metadata for the entire site and that specific page will be exposed respectively as `this.$site` and `this.$page` properties which are injected into every component in the app.\n\nThis is the value of `$site` of this very website:\n\n``` json\n{\n  "title": "VuePress",\n  "description": "Vue-powered Static Site Generator",\n  "base": "/",\n  "pages": [\n    {\n      "lastUpdated": 1524027677000,\n      "path": "/",\n      "title": "VuePress",\n      "frontmatter": {}\n    },\n    ...\n  ]\n}\n```\n\n`title`, `description` and `base` are copied from respective fields in `.vuepress/config.js`. `pages` contains an array of metadata objects for each page, including its path, page title (explicitly specified in [YAML front matter](../guide/markdown.md#front-matter) or inferred from the first header on the page), and any YAML front matter data in that file.\n\nThis is the `$page` object for this page you are looking at:\n\n``` json\n{\n  "lastUpdated": 1524847549000,\n  "path": "/guide/custom-themes.html",\n  "title": "Custom Themes",\n  "headers": [/* ... */],\n  "frontmatter": {}\n}\n```\n\nIf the user provided `themeConfig` in `.vuepress/config.js`, it will also be available as `$site.themeConfig`. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with `$site.pages` to dynamically construct navigation links.\n\nFinally, don\'t forget that `this.$route` and `this.$router` are also available as part of Vue Router\'s API.\n\n::: tip\n  `lastUpdated` is the UNIX timestamp of this file\'s last git commit, for more details, refer to [Last Updated](../theme/default-theme-config.md#last-updated).\n:::\n\n## App Level Enhancements\n\nThemes can enhance the Vue app that VuePress uses by exposing an `enhanceApp.js` file at the root of the theme. The file should `export default` a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:\n\n``` js\nexport default ({\n  Vue, // the version of Vue being used in the VuePress app\n  options, // the options for the root Vue instance\n  router, // the router instance for the app\n  siteData // site metadata\n}) => {\n  // ...apply enhancements to the app\n}\n```\n',contentRendered:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n\x3c!-- more --\x3e\n<h2 id="content-outlet" tabindex="-1"><a class="header-anchor" href="#content-outlet" aria-hidden="true">#</a> Content Outlet</h2>\n<p>The compiled content of the current <code>.md</code> file being rendered will be available as a special <code>&lt;Content/&gt;</code> global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single <code>Layout.vue</code> component with the following content:</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theme-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Also see:</strong></p>\n<ul>\n<li><RouterLink to="/guide/markdown-slot.html">Markdown Slot</RouterLink></li>\n</ul>\n<h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure" aria-hidden="true">#</a> Directory Structure</h2>\n<p>Just one <code>Layout.vue</code> might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the <RouterLink to="/config/#palette-styl">palette</RouterLink>, and even apply some plugins.</p>\n<p>So it\'s time to reorganize your theme, an agreed theme directory structure is as follows:</p>\n<p>::: vue\ntheme\n├── <code>global-components</code>\n│   └── xxx.vue\n├── <code>components</code>\n│   └── xxx.vue\n├── <code>layouts</code>\n│   ├── Layout.vue <em>(<strong>Mandatory</strong>)</em>\n│   └── 404.vue\n├── <code>styles</code>\n│   ├── index.styl\n│   └── palette.styl\n├── <code>templates</code>\n│   ├── dev.html\n│   └── ssr.html\n├── <code>index.js</code>\n├── <code>enhanceApp.js</code>\n└── package.json\n:::</p>\n<ul>\n<li><code>theme/global-components</code>: Components under this directory will be automatically registered as global components. For details, please refer to <a href="https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components" target="_blank" rel="noopener noreferrer">@vuepress/plugin-register-components<OutboundLink/></a>.</li>\n<li><code>theme/components</code>: Your components.</li>\n<li><code>theme/layouts</code>: Layout components of the theme, where <code>Layout.vue</code> is required.</li>\n<li><code>theme/styles</code>: Global style and palette.</li>\n<li><code>theme/templates</code>: Modify default template.</li>\n<li><code>theme/index.js</code>: Entry file of theme configuration.</li>\n<li><code>theme/enhanceApp.js</code>: Theme level enhancements.</li>\n</ul>\n<div class="custom-container warning"><p class="custom-container-title">Note</p>\n<p>When you publish your theme as an NPM package, if you don\'t have any theme configuration, that means you don\'t have <code>theme/index.js</code>, you\'ll need to set the <code>&quot;main&quot;</code> field  to <code>layouts/Layout.vue</code> in <code>package.json</code>, only in this way VuePress can correctly resolve the theme.</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"layouts/Layout.vue"</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div>\n<h2 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h2>\n<p>Suppose your theme layouts folder is as follows:</p>\n<p>::: vue\ntheme\n└── <code>layouts</code>\n   ├── Layout.vue\n   ├── AnotherLayout.vue\n   └── 404.vue\n:::</p>\n<p>Then, all the pages will use <code>Layout.vue</code> as layout component by default, while the routes not matching will use <code>404.vue</code>.</p>\n<p>If you want to switch the layout of some pages to <code>AnotherLayout.vue</code>, you just need to update the frontmatter of this page:</p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> AnotherLayout</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip">\n<p>Each layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using <RouterLink to="/_posts/option-api.html#globallayout">globalLayout</RouterLink>。</p>\n</div>\n<h2 id="apply-plugins" tabindex="-1"><a class="header-anchor" href="#apply-plugins" aria-hidden="true">#</a> Apply plugins</h2>\n<p>You can apply some plugins to the theme via <code>theme/index.js</code>.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'@vuepress/pwa\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> \n      serviceWorker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      updatePopup<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="site-and-page-metadata" tabindex="-1"><a class="header-anchor" href="#site-and-page-metadata" aria-hidden="true">#</a> Site and Page Metadata</h2>\n<p>The <code>Layout</code> component will be invoked once for every <code>.md</code> file in <code>docs</code>, and the metadata for the entire site and that specific page will be exposed respectively as <code>this.$site</code> and <code>this.$page</code> properties which are injected into every component in the app.</p>\n<p>This is the value of <code>$site</code> of this very website:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Vue-powered Static Site Generator"</span><span class="token punctuation">,</span>\n  <span class="token property">"base"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n  <span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524027677000</span><span class="token punctuation">,</span>\n      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>\n      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"VuePress"</span><span class="token punctuation">,</span>\n      <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><code>title</code>, <code>description</code> and <code>base</code> are copied from respective fields in <code>.vuepress/config.js</code>. <code>pages</code> contains an array of metadata objects for each page, including its path, page title (explicitly specified in <RouterLink to="/guide/markdown.html#front-matter">YAML front matter</RouterLink> or inferred from the first header on the page), and any YAML front matter data in that file.</p>\n<p>This is the <code>$page</code> object for this page you are looking at:</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"lastUpdated"</span><span class="token operator">:</span> <span class="token number">1524847549000</span><span class="token punctuation">,</span>\n  <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/guide/custom-themes.html"</span><span class="token punctuation">,</span>\n  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Custom Themes"</span><span class="token punctuation">,</span>\n  <span class="token property">"headers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"frontmatter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If the user provided <code>themeConfig</code> in <code>.vuepress/config.js</code>, it will also be available as <code>$site.themeConfig</code>. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with <code>$site.pages</code> to dynamically construct navigation links.</p>\n<p>Finally, don\'t forget that <code>this.$route</code> and <code>this.$router</code> are also available as part of Vue Router\'s API.</p>\n<div class="custom-container tip">\n<p><code>lastUpdated</code> is the UNIX timestamp of this file\'s last git commit, for more details, refer to <RouterLink to="/theme/default-theme-config.html#last-updated">Last Updated</RouterLink>.</p>\n</div>\n<h2 id="app-level-enhancements" tabindex="-1"><a class="header-anchor" href="#app-level-enhancements" aria-hidden="true">#</a> App Level Enhancements</h2>\n<p>Themes can enhance the Vue app that VuePress uses by exposing an <code>enhanceApp.js</code> file at the root of the theme. The file should <code>export default</code> a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>\n  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>\n  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>\n  siteData <span class="token comment">// site metadata</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...apply enhancements to the app</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"2019-05-06",deps:[],hoistedTags:[],links:[{raw:"../guide/markdown-slot.md",relative:"guide/markdown-slot.md",absolute:"/whats-blog-vuepress/guide/markdown-slot.md"},{raw:"../config/README.md#palette-styl",relative:"config/README.md",absolute:"/whats-blog-vuepress/config/README.md"},{raw:"./option-api.md#globallayout",relative:"_posts/option-api.md",absolute:"/whats-blog-vuepress/_posts/option-api.md"},{raw:"../guide/markdown.md#front-matter",relative:"guide/markdown.md",absolute:"/whats-blog-vuepress/guide/markdown.md"},{raw:"../theme/default-theme-config.md#last-updated",relative:"theme/default-theme-config.md",absolute:"/whats-blog-vuepress/theme/default-theme-config.md"}],pathInferred:"/_posts/2019-05-06-writing-a-vuepress-theme.html",pathLocale:"/",permalink:"/2019/05/06/writing-a-vuepress-theme.html",slug:"writing-a-vuepress-theme",filePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/_posts/2019-05-06-writing-a-vuepress-theme.md",filePathRelative:"_posts/2019-05-06-writing-a-vuepress-theme.md",componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme.html.vue",componentFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme.html.vue",componentFileChunkName:"v-daf3bb98",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/2019/05/06/writing-a-vuepress-theme.html.js",dataFilePathRelative:"pages/2019/05/06/writing-a-vuepress-theme.html.js",dataFileChunkName:"v-daf3bb98",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/2019/05/06/writing-a-vuepress-theme.html",htmlFilePathRelative:"2019/05/06/writing-a-vuepress-theme.html",data:{key:"v-daf3bb98",path:"/2019/05/06/writing-a-vuepress-theme.html",title:"Writing a vuepress theme 1",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"Writing a vuepress theme 1",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:'<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it\'s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p>\n',headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}]}},{key:"v-3706649a",path:"/404.html",title:"",lang:"en-US",frontmatter:{layout:"404"},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,slug:"",filePath:null,filePathRelative:null,componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/404.html.vue",componentFilePathRelative:"pages/404.html.vue",componentFileChunkName:"v-3706649a",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/404.html.js",dataFilePathRelative:"pages/404.html.js",dataFileChunkName:"v-3706649a",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/404.html",htmlFilePathRelative:"404.html",data:{key:"v-3706649a",path:"/404.html",title:"",lang:"en-US",frontmatter:{layout:"404"},excerpt:"",headers:[]}},{key:"v-8daa1a0e",path:"/",title:"Post",lang:"en-US",frontmatter:{title:"Post",pagination:{type:"page",id:"post",index:0}},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,slug:"",filePath:null,filePathRelative:null,componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/index.html.vue",componentFilePathRelative:"pages/index.html.vue",componentFileChunkName:"v-8daa1a0e",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/index.html.js",dataFilePathRelative:"pages/index.html.js",dataFileChunkName:"v-8daa1a0e",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/index.html",htmlFilePathRelative:"index.html",data:{key:"v-8daa1a0e",path:"/",title:"Post",lang:"en-US",frontmatter:{title:"Post",pagination:{type:"page",id:"post",index:0}},excerpt:"",headers:[]}},{key:"v-3a1f88a4",path:"/page/2/",title:"Page 2 | Post",lang:"en-US",frontmatter:{title:"Page 2 | Post",pagination:{type:"page",id:"post",index:1}},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,slug:"",filePath:null,filePathRelative:null,componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/page/2/index.html.vue",componentFilePathRelative:"pages/page/2/index.html.vue",componentFileChunkName:"v-3a1f88a4",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/page/2/index.html.js",dataFilePathRelative:"pages/page/2/index.html.js",dataFileChunkName:"v-3a1f88a4",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/page/2/index.html",htmlFilePathRelative:"page/2/index.html",data:{key:"v-3a1f88a4",path:"/page/2/",title:"Page 2 | Post",lang:"en-US",frontmatter:{title:"Page 2 | Post",pagination:{type:"page",id:"post",index:1}},excerpt:"",headers:[]}},{key:"v-3a1f88c3",path:"/page/3/",title:"Page 3 | Post",lang:"en-US",frontmatter:{title:"Page 3 | Post",pagination:{type:"page",id:"post",index:2}},excerpt:"",headers:[],content:"",contentRendered:"",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:null,pathLocale:"/",permalink:null,slug:"",filePath:null,filePathRelative:null,componentFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/page/3/index.html.vue",componentFilePathRelative:"pages/page/3/index.html.vue",componentFileChunkName:"v-3a1f88c3",dataFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/.temp/pages/page/3/index.html.js",dataFilePathRelative:"pages/page/3/index.html.js",dataFileChunkName:"v-3a1f88c3",htmlFilePath:"/home/runner/work/whats-blog-vuepress/whats-blog-vuepress/blog/.vuepress/dist/page/3/index.html",htmlFilePathRelative:"page/3/index.html",data:{key:"v-3a1f88c3",path:"/page/3/",title:"Page 3 | Post",lang:"en-US",frontmatter:{title:"Page 3 | Post",pagination:{type:"page",id:"post",index:2}},excerpt:"",headers:[]}}],i=[s,p,(0,t.vW)((({app:e})=>{const n=(0,o.iH)(r);Object.defineProperty(e.config.globalProperties,"$pages",{get:()=>n.value})})),a(7800).Z]},2168:(e,n,a)=>{a.d(n,{p:()=>t});const t=[]},4889:(e,n,a)=>{a.d(n,{l:()=>t});const t=[]},2136:(e,n,a)=>{a.d(n,{Z:()=>s});var t=a(7951);const s={404:(0,t.RC)((()=>a.e(895).then(a.bind(a,2895)))),Layout:(0,t.RC)((()=>a.e(622).then(a.bind(a,5622))))}},1225:(e,n,a)=>{a.d(n,{b:()=>s});var t=a(7951);const s={"v-5f9b8c08":(0,t.RC)((()=>a.e(178).then(a.bind(a,9314)))),"v-5c31daca":(0,t.RC)((()=>a.e(864).then(a.bind(a,4853)))),"v-ee796afe":(0,t.RC)((()=>a.e(626).then(a.bind(a,5119)))),"v-3b017d46":(0,t.RC)((()=>a.e(139).then(a.bind(a,1834)))),"v-3cb655e5":(0,t.RC)((()=>a.e(428).then(a.bind(a,4690)))),"v-3e6b2e84":(0,t.RC)((()=>a.e(629).then(a.bind(a,7878)))),"v-37824f6a":(0,t.RC)((()=>a.e(931).then(a.bind(a,5333)))),"v-749df0ef":(0,t.RC)((()=>a.e(164).then(a.bind(a,9288)))),"v-7652c98e":(0,t.RC)((()=>a.e(576).then(a.bind(a,9033)))),"v-7807a22d":(0,t.RC)((()=>a.e(81).then(a.bind(a,7305)))),"v-daf3bb98":(0,t.RC)((()=>a.e(441).then(a.bind(a,2023)))),"v-3706649a":(0,t.RC)((()=>a.e(88).then(a.bind(a,8693)))),"v-8daa1a0e":(0,t.RC)((()=>a.e(509).then(a.bind(a,5639)))),"v-3a1f88a4":(0,t.RC)((()=>a.e(159).then(a.bind(a,9547)))),"v-3a1f88c3":(0,t.RC)((()=>a.e(154).then(a.bind(a,4840))))}},3629:(e,n,a)=>{a.d(n,{T:()=>t});const t={"v-5f9b8c08":()=>a.e(178).then(a.bind(a,6212)).then((({data:e})=>e)),"v-5c31daca":()=>a.e(864).then(a.bind(a,1266)).then((({data:e})=>e)),"v-ee796afe":()=>a.e(626).then(a.bind(a,4802)).then((({data:e})=>e)),"v-3b017d46":()=>a.e(139).then(a.bind(a,6986)).then((({data:e})=>e)),"v-3cb655e5":()=>a.e(428).then(a.bind(a,5352)).then((({data:e})=>e)),"v-3e6b2e84":()=>a.e(629).then(a.bind(a,7500)).then((({data:e})=>e)),"v-37824f6a":()=>a.e(931).then(a.bind(a,4807)).then((({data:e})=>e)),"v-749df0ef":()=>a.e(164).then(a.bind(a,5898)).then((({data:e})=>e)),"v-7652c98e":()=>a.e(576).then(a.bind(a,6651)).then((({data:e})=>e)),"v-7807a22d":()=>a.e(81).then(a.bind(a,5625)).then((({data:e})=>e)),"v-daf3bb98":()=>a.e(441).then(a.bind(a,3352)).then((({data:e})=>e)),"v-3706649a":()=>a.e(88).then(a.bind(a,419)).then((({data:e})=>e)),"v-8daa1a0e":()=>a.e(509).then(a.bind(a,2611)).then((({data:e})=>e)),"v-3a1f88a4":()=>a.e(159).then(a.bind(a,8955)).then((({data:e})=>e)),"v-3a1f88c3":()=>a.e(154).then(a.bind(a,3859)).then((({data:e})=>e))}},9118:(e,n,a)=>{a.d(n,{g:()=>s});var t=a(3929);const s=[["v-5f9b8c08","/2018/11/07/frontmatter-in-vuepress-2.html","frontmatter in vuepress 2",["/2018/11/07/frontmatter-in-vuepress-2","/_posts/2018-11-07-frontmatter-in-vuepress-2.html","/_posts/2018-11-07-frontmatter-in-vuepress-2.md"]],["v-5c31daca","/2018/11/07/frontmatter-in-vuepress-3.html","frontmatter in vuepress 3",["/2018/11/07/frontmatter-in-vuepress-3","/_posts/2018-11-07-frontmatter-in-vuepress-3.html","/_posts/2018-11-07-frontmatter-in-vuepress-3.md"]],["v-ee796afe","/2018/11/07/frontmatter-in-vuepress.html","frontmatter in vuepress 1",["/2018/11/07/frontmatter-in-vuepress","/_posts/2018-11-07-frontmatter-in-vuepress.html","/_posts/2018-11-07-frontmatter-in-vuepress.md"]],["v-3b017d46","/2019/02/26/markdown-slot-2.html","Markdown Slot 2",["/2019/02/26/markdown-slot-2","/_posts/2019-02-26-markdown-slot-2.html","/_posts/2019-02-26-markdown-slot-2.md"]],["v-3cb655e5","/2019/02/26/markdown-slot-3.html","Markdown Slot 3",["/2019/02/26/markdown-slot-3","/_posts/2019-02-26-markdown-slot-3.html","/_posts/2019-02-26-markdown-slot-3.md"]],["v-3e6b2e84","/2019/02/26/markdown-slot-4.html","Markdown Slot 4",["/2019/02/26/markdown-slot-4","/_posts/2019-02-26-markdown-slot-4.html","/_posts/2019-02-26-markdown-slot-4.md"]],["v-37824f6a","/2019/02/26/markdown-slot.html","Markdown Slot 1",["/2019/02/26/markdown-slot","/_posts/2019-02-26-markdown-slot.html","/_posts/2019-02-26-markdown-slot.md"]],["v-749df0ef","/2019/05/06/writing-a-vuepress-theme-2.html","writing a vuepress theme 2",["/2019/05/06/writing-a-vuepress-theme-2","/_posts/2019-05-06-writing-a-vuepress-theme-2.html","/_posts/2019-05-06-writing-a-vuepress-theme-2.md"]],["v-7652c98e","/2019/05/06/writing-a-vuepress-theme-3.html","writing a vuepress theme 3",["/2019/05/06/writing-a-vuepress-theme-3","/_posts/2019-05-06-writing-a-vuepress-theme-3.html","/_posts/2019-05-06-writing-a-vuepress-theme-3.md"]],["v-7807a22d","/2019/05/06/writing-a-vuepress-theme-4.html","writing a vuepress theme 4",["/2019/05/06/writing-a-vuepress-theme-4","/_posts/2019-05-06-writing-a-vuepress-theme-4.html","/_posts/2019-05-06-writing-a-vuepress-theme-4.md"]],["v-daf3bb98","/2019/05/06/writing-a-vuepress-theme.html","Writing a vuepress theme 1",["/2019/05/06/writing-a-vuepress-theme","/_posts/2019-05-06-writing-a-vuepress-theme.html","/_posts/2019-05-06-writing-a-vuepress-theme.md"]],["v-3706649a","/404.html","",["/404"]],["v-8daa1a0e","/","Post",["/index.html"]],["v-3a1f88a4","/page/2/","Page 2 | Post",["/page/2/index.html"]],["v-3a1f88c3","/page/3/","Page 3 | Post",["/page/3/index.html"]]].reduce(((e,[n,a,s,o])=>(e.push({name:n,path:a,component:t.Y,meta:{title:s}},...o.map((e=>({path:e,redirect:a})))),e)),[{name:"404",path:"/:catchAll(.*)",component:t.Y}])},8125:(e,n,a)=>{a.d(n,{H:()=>t});const t={base:"/whats-blog-vuepress/",lang:"en-US",title:"VuePress Blog Example",description:"",head:[],locales:{}}},1046:(e,n,a)=>{a.d(n,{f:()=>t});const t={nav:[{text:"Blog",link:"/"},{text:"Tags",link:"/tag/"}],footer:{contact:[{type:"github",link:"https://github.com/whats-blog"}],copyright:[{text:"Privacy Policy",link:"https://policies.google.com/privacy?hl=en-US"},{text:"MIT Licensed | Copyright © 2021-present What's Blog",link:""}]}}}},e=>{e.O(0,[242,800],(()=>(1078,e(e.s=1078)))),e.O()}]);