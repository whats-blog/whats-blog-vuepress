"use strict";(self.webpackChunkwhats_blog_vuepress=self.webpackChunkwhats_blog_vuepress||[]).push([[81],{5625:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-7807a22d",path:"/2019/05/06/writing-a-vuepress-theme-4.html",title:"writing a vuepress theme 4",lang:"en-US",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",pagination:{type:"post",id:"post"},title:"writing a vuepress theme 4",date:"2019-05-06T00:00:00.000Z",tags:["theme","blog","vuepress"],author:"ULIVZ",location:"Shanghai"},excerpt:"",headers:[{level:2,title:"Content Outlet",slug:"content-outlet",children:[]},{level:2,title:"Directory Structure",slug:"directory-structure",children:[]},{level:2,title:"Layout Component",slug:"layout-component",children:[]},{level:2,title:"Apply plugins",slug:"apply-plugins",children:[]},{level:2,title:"Site and Page Metadata",slug:"site-and-page-metadata",children:[]},{level:2,title:"App Level Enhancements",slug:"app-level-enhancements",children:[]}]}},7305:(n,e,s)=>{s.r(e),s.d(e,{default:()=>O});var a=s(7951);const t=(0,a.uE)('<p>To write a theme, create a <code>.vuepress/theme</code> directory in your docs root, and then create a <code>Layout.vue</code> file:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.\n└─ .vuepress\n   └─ `theme`\n       └─ Layout.vue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>From there it&#39;s the same as developing a normal Vue application. It is entirely up to you how to organize your theme.</p><h2 id="content-outlet" tabindex="-1"><a class="header-anchor" href="#content-outlet" aria-hidden="true">#</a> Content Outlet</h2><p>The compiled content of the current <code>.md</code> file being rendered will be available as a special <code>&lt;Content/&gt;</code> global component. You will need to render it somewhere in your layout in order to display the content of the page. The simplest theme can be just a single <code>Layout.vue</code> component with the following content:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>theme-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Also see:</strong></p>',7),o=(0,a.Uk)("Markdown Slot"),p=(0,a._)("h2",{id:"directory-structure",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#directory-structure","aria-hidden":"true"},"#"),(0,a.Uk)(" Directory Structure")],-1),l=(0,a.Uk)("Just one "),c=(0,a._)("code",null,"Layout.vue",-1),u=(0,a.Uk)(" might not be enough, and you might also want to define more layout components in the theme for using on different pages. You may also want to customize the "),r=(0,a.Uk)("palette"),i=(0,a.Uk)(", and even apply some plugins."),d=(0,a.uE)("<p>So it&#39;s time to reorganize your theme, an agreed theme directory structure is as follows:</p><p>::: vue theme ├── <code>global-components</code> │ └── xxx.vue ├── <code>components</code> │ └── xxx.vue ├── <code>layouts</code> │   ├── Layout.vue <em>(<strong>Mandatory</strong>)</em> │   └── 404.vue ├── <code>styles</code> │   ├── index.styl │   └── palette.styl ├── <code>templates</code> │   ├── dev.html │   └── ssr.html ├── <code>index.js</code> ├── <code>enhanceApp.js</code> └── package.json :::</p>",2),m=(0,a._)("code",null,"theme/global-components",-1),h=(0,a.Uk)(": Components under this directory will be automatically registered as global components. For details, please refer to "),k={href:"https://github.com/vuejs/vuepress/tree/master/packages/@vuepress/plugin-register-components",target:"_blank",rel:"noopener noreferrer"},b=(0,a.Uk)("@vuepress/plugin-register-components"),g=(0,a.Uk)("."),y=(0,a.uE)("<li><code>theme/components</code>: Your components.</li><li><code>theme/layouts</code>: Layout components of the theme, where <code>Layout.vue</code> is required.</li><li><code>theme/styles</code>: Global style and palette.</li><li><code>theme/templates</code>: Modify default template.</li><li><code>theme/index.js</code>: Entry file of theme configuration.</li><li><code>theme/enhanceApp.js</code>: Theme level enhancements.</li>",6),v=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">Note</p><p>When you publish your theme as an NPM package, if you don&#39;t have any theme configuration, that means you don&#39;t have <code>theme/index.js</code>, you&#39;ll need to set the <code>&quot;main&quot;</code> field to <code>layouts/Layout.vue</code> in <code>package.json</code>, only in this way VuePress can correctly resolve the theme.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  ...\n  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;layouts/Layout.vue&quot;</span><span class="token punctuation">,</span>\n  ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h2 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h2><p>Suppose your theme layouts folder is as follows:</p><p>::: vue theme └── <code>layouts</code>    ├── Layout.vue    ├── AnotherLayout.vue    └── 404.vue :::</p><p>Then, all the pages will use <code>Layout.vue</code> as layout component by default, while the routes not matching will use <code>404.vue</code>.</p><p>If you want to switch the layout of some pages to <code>AnotherLayout.vue</code>, you just need to update the frontmatter of this page:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token font-matter yaml language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> AnotherLayout</span>\n<span class="token punctuation">---</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',7),f={class:"custom-container tip"},w=(0,a.Uk)("Each layout component may render distinct pages. If you want to apply some global UI (e.g. global header), consider using "),q=(0,a.Uk)("globalLayout"),x=(0,a.Uk)("。"),j=(0,a.uE)('<h2 id="apply-plugins" tabindex="-1"><a class="header-anchor" href="#apply-plugins" aria-hidden="true">#</a> Apply plugins</h2><p>You can apply some plugins to the theme via <code>theme/index.js</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">&#39;@vuepress/pwa&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> \n      serviceWorker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      updatePopup<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="site-and-page-metadata" tabindex="-1"><a class="header-anchor" href="#site-and-page-metadata" aria-hidden="true">#</a> Site and Page Metadata</h2><p>The <code>Layout</code> component will be invoked once for every <code>.md</code> file in <code>docs</code>, and the metadata for the entire site and that specific page will be exposed respectively as <code>this.$site</code> and <code>this.$page</code> properties which are injected into every component in the app.</p><p>This is the value of <code>$site</code> of this very website:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;VuePress&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Vue-powered Static Site Generator&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;base&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;pages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;lastUpdated&quot;</span><span class="token operator">:</span> <span class="token number">1524027677000</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;VuePress&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;frontmatter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',7),_=(0,a._)("code",null,"title",-1),U=(0,a.Uk)(", "),L=(0,a._)("code",null,"description",-1),A=(0,a.Uk)(" and "),V=(0,a._)("code",null,"base",-1),C=(0,a.Uk)(" are copied from respective fields in "),T=(0,a._)("code",null,".vuepress/config.js",-1),E=(0,a.Uk)(". "),P=(0,a._)("code",null,"pages",-1),S=(0,a.Uk)(" contains an array of metadata objects for each page, including its path, page title (explicitly specified in "),Y=(0,a.Uk)("YAML front matter"),I=(0,a.Uk)(" or inferred from the first header on the page), and any YAML front matter data in that file."),M=(0,a.uE)('<p>This is the <code>$page</code> object for this page you are looking at:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;lastUpdated&quot;</span><span class="token operator">:</span> <span class="token number">1524847549000</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/guide/custom-themes.html&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Custom Themes&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;frontmatter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>If the user provided <code>themeConfig</code> in <code>.vuepress/config.js</code>, it will also be available as <code>$site.themeConfig</code>. You can use this to allow users to customize behavior of your theme - for example, specifying categories and page order. You can then use these data together with <code>$site.pages</code> to dynamically construct navigation links.</p><p>Finally, don&#39;t forget that <code>this.$route</code> and <code>this.$router</code> are also available as part of Vue Router&#39;s API.</p>',4),W={class:"custom-container tip"},$=(0,a._)("code",null,"lastUpdated",-1),z=(0,a.Uk)(" is the UNIX timestamp of this file's last git commit, for more details, refer to "),D=(0,a.Uk)("Last Updated"),F=(0,a.Uk)("."),N=(0,a.uE)('<h2 id="app-level-enhancements" tabindex="-1"><a class="header-anchor" href="#app-level-enhancements" aria-hidden="true">#</a> App Level Enhancements</h2><p>Themes can enhance the Vue app that VuePress uses by exposing an <code>enhanceApp.js</code> file at the root of the theme. The file should <code>export default</code> a hook function which will receive an object containing some app-level values. You can use this hook to install additional Vue plugins, register global components, or add additional router hooks:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>\n  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>\n  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>\n  siteData <span class="token comment">// site metadata</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...apply enhancements to the app</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',3),O={render:function(n,e){const s=(0,a.up)("RouterLink"),O=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(s,{to:"/guide/markdown-slot.html"},{default:(0,a.w5)((()=>[o])),_:1})])]),p,(0,a._)("p",null,[l,c,u,(0,a.Wm)(s,{to:"/config/#palette-styl"},{default:(0,a.w5)((()=>[r])),_:1}),i]),d,(0,a._)("ul",null,[(0,a._)("li",null,[m,h,(0,a._)("a",k,[b,(0,a.Wm)(O)]),g]),y]),v,(0,a._)("div",f,[(0,a._)("p",null,[w,(0,a.Wm)(s,{to:"/_posts/option-api.html#globallayout"},{default:(0,a.w5)((()=>[q])),_:1}),x])]),j,(0,a._)("p",null,[_,U,L,A,V,C,T,E,P,S,(0,a.Wm)(s,{to:"/guide/markdown.html#front-matter"},{default:(0,a.w5)((()=>[Y])),_:1}),I]),M,(0,a._)("div",W,[(0,a._)("p",null,[$,z,(0,a.Wm)(s,{to:"/theme/default-theme-config.html#last-updated"},{default:(0,a.w5)((()=>[D])),_:1}),F])]),N],64)}}}}]);